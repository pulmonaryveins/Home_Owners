@page
@model HomeOwners.Areas.Admin.Pages.CalendarModel
@{
    ViewData["Title"] = "Calendar of Activities";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" asp-area="Admin" asp-page="/Dashboard">
            <span class="brand-text">ADMIN DASHBOARD</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Dashboard">Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Users">Users</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Users">Services</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Users">Facilities</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" asp-area="Admin" asp-page="/Calendar">Calendar</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Announcement">Announcements</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Users">Reports</a>
                </li>
            </ul>

            <!-- Profile Menu -->
            <div class="nav-item dropdown profile-menu">
                <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" role="button"
                   data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-person-circle me-1"></i>
                    <span class="d-none d-lg-inline">@User.Identity?.Name</span>
                </a>
                <ul class="dropdown-menu dropdown-menu-end">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                          asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="dropdown-item">
                            <i class="bi bi-box-arrow-right"></i> Logout
                        </button>
                    </form>
                </ul>
            </div>
        </div>
    </div>
</nav>

<div class="container dashboard-container">
    <div class="dashboard-header d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-0">
                <i class="bi bi-calendar-event me-2"></i>
                Calendar Management
            </h2>
            <p class="text-muted mb-0 mt-1">Manage community events and scheduled activities</p>
        </div>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createEventModal">
            <i class="bi bi-plus-circle me-1"></i> Create New Event
        </button>
    </div>

    @if (TempData["StatusMessage"] != null)
    {
        <div class="alert @(TempData["StatusType"]?.ToString() == "Error" ? "alert-danger" : "alert-success") alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi @(TempData["StatusType"]?.ToString() == "Error" ? "bi-exclamation-triangle" : "bi-check-circle") me-2"></i>
                <span>@TempData["StatusMessage"]</span>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <div class="row mb-4">
        <div class="col-lg-3">
            <div class="card dashboard-card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-filter-circle me-2"></i> Filters
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Event Categories</label>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterCommunity" checked>
                            <label class="form-check-label" for="filterCommunity">
                                <span class="category-dot" style="background-color: #4e6e4d;"></span> Community
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterSports" checked>
                            <label class="form-check-label" for="filterSports">
                                <span class="category-dot" style="background-color: #0d6efd;"></span> Sports
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterMeeting" checked>
                            <label class="form-check-label" for="filterMeeting">
                                <span class="category-dot" style="background-color: #dc3545;"></span> Meeting
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterSocial" checked>
                            <label class="form-check-label" for="filterSocial">
                                <span class="category-dot" style="background-color: #ffc107;"></span> Social
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="filterOther" checked>
                            <label class="form-check-label" for="filterOther">
                                <span class="category-dot" style="background-color: #6c757d;"></span> Other
                            </label>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Date Range</label>
                        <select id="dateRangeFilter" class="form-select">
                            <option value="month">Current Month</option>
                            <option value="week">Current Week</option>
                            <option value="day">Today</option>
                            <option value="upcoming">Upcoming Events</option>
                            <option value="past">Past Events</option>
                            <option value="all" selected>All Events</option>
                        </select>
                    </div>
                    
                    <div>
                        <button id="applyFilters" class="btn btn-primary w-100">
                            <i class="bi bi-funnel me-1"></i> Apply Filters
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle me-2"></i> Legend
                    </h5>
                </div>
                <div class="card-body">
                    <div class="legend-item">
                        <div class="legend-color" style="background-color: #4e6e4d;"></div>
                        <div>Community Events</div>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background-color: #0d6efd;"></div>
                        <div>Sports Events</div>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background-color: #dc3545;"></div>
                        <div>Meetings</div>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background-color: #ffc107;"></div>
                        <div>Social Events</div>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background-color: #6c757d;"></div>
                        <div>Other Events</div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-9">
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-calendar3 me-2"></i> Community Calendar
                        </h5>
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-primary btn-sm" id="printCalendar">
                                <i class="bi bi-printer"></i> Print
                            </button>
                            <button type="button" class="btn btn-outline-primary btn-sm" id="exportCalendar">
                                <i class="bi bi-download"></i> Export
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div id="calendar" class="admin-calendar"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Event Modal -->
<div class="modal fade" id="createEventModal" tabindex="-1" aria-labelledby="createEventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createEventModalLabel">
                    <i class="bi bi-calendar-plus me-2"></i> Create New Event
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createEventForm" method="post">
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-12">
                            <label for="Title" class="form-label fw-medium">Event Title <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="Title" name="Event.Title" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-12">
                            <label for="Description" class="form-label fw-medium">Description <span class="text-danger">*</span></label>
                            <textarea class="form-control" id="Description" name="Event.Description" rows="3" required></textarea>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="StartTime" class="form-label fw-medium">Start Date & Time <span class="text-danger">*</span></label>
                            <input type="datetime-local" class="form-control" id="StartTime" name="Event.StartTime" required>
                        </div>
                        <div class="col-md-6">
                            <label for="EndTime" class="form-label fw-medium">End Date & Time <span class="text-danger">*</span></label>
                            <input type="datetime-local" class="form-control" id="EndTime" name="Event.EndTime" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="Location" class="form-label fw-medium">Location</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <input type="text" class="form-control" id="Location" name="Event.Location" placeholder="Event location">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="Category" class="form-label fw-medium">Category</label>
                            <select class="form-select" id="Category" name="Event.Category">
                                <option value="Community">Community</option>
                                <option value="Sports">Sports</option>
                                <option value="Meeting">Meeting</option>
                                <option value="Social">Social</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="Color" class="form-label fw-medium">Event Color</label>
                            <input type="color" class="form-control form-control-color" id="Color" name="Event.Color" value="#4e6e4d">
                            <div class="form-text">Choose a color for the event on the calendar</div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-0 bg-light h-100">
                                <div class="card-body">
                                    <h6 class="card-title fw-medium mb-3">Event Options</h6>
                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" id="IsAllDay" name="Event.IsAllDay">
                                        <label class="form-check-label" for="IsAllDay">All Day Event</label>
                                        <div class="form-text">Event will be displayed as an all-day event</div>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="IsPublic" name="Event.IsPublic" checked>
                                        <label class="form-check-label" for="IsPublic">Public Event</label>
                                        <div class="form-text">Make this event visible to all homeowners</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-lg me-1"></i> Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-1"></i> Create Event
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Event Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editEventModalLabel">
                    <i class="bi bi-pencil-square me-2"></i> Edit Event
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editEventForm" method="post">
                <input type="hidden" id="editEventId" name="Event.Id">
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-12">
                            <label for="editTitle" class="form-label fw-medium">Event Title <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="editTitle" name="Event.Title" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-12">
                            <label for="editDescription" class="form-label fw-medium">Description <span class="text-danger">*</span></label>
                            <textarea class="form-control" id="editDescription" name="Event.Description" rows="3" required></textarea>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="editStartTime" class="form-label fw-medium">Start Date & Time <span class="text-danger">*</span></label>
                            <input type="datetime-local" class="form-control" id="editStartTime" name="Event.StartTime" required>
                        </div>
                        <div class="col-md-6">
                            <label for="editEndTime" class="form-label fw-medium">End Date & Time <span class="text-danger">*</span></label>
                            <input type="datetime-local" class="form-control" id="editEndTime" name="Event.EndTime" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="editLocation" class="form-label fw-medium">Location</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <input type="text" class="form-control" id="editLocation" name="Event.Location" placeholder="Event location">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="editCategory" class="form-label fw-medium">Category</label>
                            <select class="form-select" id="editCategory" name="Event.Category">
                                <option value="Community">Community</option>
                                <option value="Sports">Sports</option>
                                <option value="Meeting">Meeting</option>
                                <option value="Social">Social</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="editColor" class="form-label fw-medium">Event Color</label>
                            <input type="color" class="form-control form-control-color" id="editColor" name="Event.Color" value="#4e6e4d">
                            <div class="form-text">Choose a color for the event on the calendar</div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-0 bg-light h-100">
                                <div class="card-body">
                                    <h6 class="card-title fw-medium mb-3">Event Options</h6>
                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" id="editIsAllDay" name="Event.IsAllDay">
                                        <label class="form-check-label" for="editIsAllDay">All Day Event</label>
                                    </div>
                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" id="editIsActive" name="Event.IsActive" checked>
                                        <label class="form-check-label" for="editIsActive">Active</label>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="editIsPublic" name="Event.IsPublic" checked>
                                        <label class="form-check-label" for="editIsPublic">Public Event</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-outline-danger" id="deleteEventBtn">
                        <i class="bi bi-trash me-1"></i> Delete Event
                    </button>
                    <div>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-lg me-1"></i> Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save me-1"></i> Update Event
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this event? This action cannot be undone.</p>
                <p class="mb-0 fw-medium text-danger">This will permanently remove the event from the system calendar.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash me-1"></i> Delete Event
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var eventToDelete = null;
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                themeSystem: 'bootstrap5',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                },
                events: '/api/events',
                editable: true,
                selectable: true,
                selectMirror: true,
                dayMaxEvents: true,
                height: 'auto',
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    meridiem: 'short'
                },
                views: {
                    dayGrid: {
                        dayMaxEventRows: 4
                    }
                },
                eventClick: function(info) {
                    // Fill and show the edit event modal
                    var event = info.event;
                    document.getElementById('editEventId').value = event.id;
                    document.getElementById('editTitle').value = event.title;
                    document.getElementById('editDescription').value = event.extendedProps.description || '';
                    document.getElementById('editLocation').value = event.extendedProps.location || '';
                    document.getElementById('editCategory').value = event.extendedProps.category || 'Other';
                    document.getElementById('editColor').value = event.backgroundColor || '#4e6e4d';
                    document.getElementById('editIsAllDay').checked = event.allDay;
                    document.getElementById('editIsActive').checked = event.extendedProps.isActive !== false;
                    document.getElementById('editIsPublic').checked = event.extendedProps.isPublic !== false;
                    
                    // Format date for datetime-local input
                    var startDate = new Date(event.start);
                    var endDate = new Date(event.end || startDate);
                    
                    if (event.allDay) {
                        // For all-day events, set default times
                        startDate.setHours(9, 0, 0);
                        endDate.setHours(17, 0, 0);
                    }
                    
                    var startFormatted = toLocalIsoString(startDate);
                    var endFormatted = toLocalIsoString(endDate);
                    
                    document.getElementById('editStartTime').value = startFormatted;
                    document.getElementById('editEndTime').value = endFormatted;
                    
                    var editEventModal = new bootstrap.Modal(document.getElementById('editEventModal'));
                    editEventModal.show();
                },
                select: function(info) {
                    // Pre-fill dates when selecting a time range on the calendar
                    var startDate = info.start;
                    var endDate = info.end;
                    
                    // Set default times (9 AM - 5 PM)
                    startDate.setHours(9, 0, 0);
                    endDate.setDate(endDate.getDate() - 1); // Adjust for all-day selection
                    endDate.setHours(17, 0, 0);
                    
                    document.getElementById('StartTime').value = toLocalIsoString(startDate);
                    document.getElementById('EndTime').value = toLocalIsoString(endDate);
                    
                    // Set "All Day" checkbox based on selection type
                    document.getElementById('IsAllDay').checked = info.allDay;
                    
                    var createEventModal = new bootstrap.Modal(document.getElementById('createEventModal'));
                    createEventModal.show();
                },
                eventDrop: function(info) {
                    updateEventDates(info.event);
                },
                eventResize: function(info) {
                    updateEventDates(info.event);
                }
            });
            calendar.render();
            
            // Helper function to convert date to local ISO string format for datetime-local input
            function toLocalIsoString(date) {
                var tzoffset = date.getTimezoneOffset() * 60000; // offset in milliseconds
                var localISOTime = (new Date(date.getTime() - tzoffset)).toISOString().slice(0, 16);
                return localISOTime;
            }
            
            // Handle updates when events are dragged or resized
            function updateEventDates(event) {
                var startDate = event.start;
                var endDate = event.end || startDate;
                
                fetch('/api/events/' + event.id, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        id: event.id,
                        startTime: startDate.toISOString(),
                        endTime: endDate.toISOString(),
                        isAllDay: event.allDay
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to update event');
                    }
                    // Show success message
                    showToast('Event updated successfully', 'success');
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Revert the event if the update failed
                    calendar.refetchEvents();
                    showToast('Failed to update event', 'danger');
                });
            }
            
            // Delete event button
            document.getElementById('deleteEventBtn').addEventListener('click', function() {
                var eventId = document.getElementById('editEventId').value;
                eventToDelete = eventId;
                
                // Close the edit modal
                bootstrap.Modal.getInstance(document.getElementById('editEventModal')).hide();
                
                // Show the confirmation modal
                var deleteConfirmModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                deleteConfirmModal.show();
            });
            
            // Confirm delete button
            document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
                if (!eventToDelete) return;
                
                fetch('/api/events/' + eventToDelete, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Close the confirmation modal
                        bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
                        
                        // Refresh calendar events
                        calendar.refetchEvents();
                        
                        // Show success message
                        showToast('Event deleted successfully', 'success');
                    } else {
                        throw new Error('Failed to delete event');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Failed to delete event', 'danger');
                });
            });
            
            // Filter functionality
            document.getElementById('applyFilters').addEventListener('click', function() {
                // Get selected categories
                var selectedCategories = [];
                if (document.getElementById('filterCommunity').checked) selectedCategories.push('Community');
                if (document.getElementById('filterSports').checked) selectedCategories.push('Sports');
                if (document.getElementById('filterMeeting').checked) selectedCategories.push('Meeting');
                if (document.getElementById('filterSocial').checked) selectedCategories.push('Social');
                if (document.getElementById('filterOther').checked) selectedCategories.push('Other');
                
                // Apply filters to calendar
                calendar.getEvents().forEach(function(event) {
                    var category = event.extendedProps.category || 'Other';
                    if (selectedCategories.includes(category)) {
                        event.setProp('display', 'auto');
                    } else {
                        event.setProp('display', 'none');
                    }
                });
                
                // Show toast
                showToast('Filters applied', 'primary');
            });
            
            // Print calendar
            document.getElementById('printCalendar').addEventListener('click', function() {
                window.print();
            });
            
            // Function to show toast messages
            function showToast(message, type) {
                var toastHTML = `
                <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                </div>
                `;
                
                // Remove any existing toast container
                const existingToast = document.querySelector('.position-fixed.bottom-0.end-0.p-3');
                if (existingToast) {
                    existingToast.remove();
                }
                
                // Add new toast to body
                document.body.insertAdjacentHTML('beforeend', toastHTML);
                
                // Initialize and show toast
                var toastEl = document.querySelector('.toast');
                var toast = new bootstrap.Toast(toastEl, {
                    delay: 3000
                });
                toast.show();
            }
        });
    </script>
}

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
    }

    .modal-header {
        background: #4e6e4d;
    }

    /* Base button styles */
    .btn-primary {
        --bs-btn-color: #fff;
        --bs-btn-bg: #4e6e4d;
        --bs-btn-border-color: #4e6e4d;
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: #3d5a3c;
        --bs-btn-hover-border-color: #3d5a3c;
        --bs-btn-focus-shadow-rgb: 49, 132, 253;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: #3d5a3c;
        --bs-btn-active-border-color: #3d5a3c;
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #fff;
        --bs-btn-disabled-bg: #4e6e4d;
        --bs-btn-disabled-border-color: #4e6e4d;
    }

    /* Other button styles and utility classes */
    .btn-outline-primary {
        --bs-btn-color: #4e6e4d;
        --bs-btn-border-color: #4e6e4d;
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: #4e6e4d;
        --bs-btn-hover-border-color: #4e6e4d;
        --bs-btn-focus-shadow-rgb: 13, 110, 253;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: #4e6e4d;
        --bs-btn-active-border-color: #4e6e4d;
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #4e6e4d;
        --bs-btn-disabled-bg: transparent;
        --bs-btn-disabled-border-color: #4e6e4d;
        --bs-gradient: none;
    }

    body {
        background-color: #f5f7f9;
    }

    /* Navbar styling */
    .navbar {
        background-color: var(--primary-color) !important;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        padding: 0.75rem 0;
        transition: all 0.3s ease;
    }

    .navbar-brand {
        font-weight: 700;
        color: white !important;
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    .brand-text {
        background: linear-gradient(45deg, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .navbar-nav {
        gap: 0.5rem;
    }

        .navbar-nav .nav-link {
            color: var(--text-light) !important;
            font-weight: 500;
            font-size: 0.95rem;
            padding: 0.5rem 1rem !important;
            border-radius: 4px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

            .navbar-nav .nav-link:hover,
            .navbar-nav .nav-link.active {
                background-color: rgba(255, 255, 255, 0.15);
                transform: translateY(-1px);
            }

    .profile-menu .nav-link {
        padding: 0.5rem !important;
        color: white !important;
        transition: all 0.3s ease;
        border-radius: 4px;
    }

        .profile-menu .nav-link:hover {
            background-color: rgba(255, 255, 255, 0.15);
        }

    .dashboard-container {
        margin-top: 6rem;
        padding-bottom: 2rem;
    }

    .dashboard-header {
        margin-bottom: 1.5rem;
        border-bottom: 1px solid rgba(0,0,0,0.1);
        padding-bottom: 1rem;
    }

        .dashboard-header h2 {
            font-weight: 600;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            font-size: 1.5rem;
        }

    /* Calendar specific styles */
    .admin-calendar {
        background-color: white;
        padding: 1rem;
    }

    .fc-theme-bootstrap5 a {
        color: var(--primary-color);
    }

    .fc .fc-button-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .fc .fc-button-primary:hover {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
    }

    .fc .fc-button-primary:disabled {
        background-color: var(--primary-light);
        border-color: var(--primary-light);
    }

    .fc-h-event {
        background-color: var(--primary-color);
        border-color: var(--primary-dark);
    }

    .fc-daygrid-event {
        border-radius: 4px;
    }

    /* Legend styles */
    .legend-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
    }

    .legend-color {
        width: 20px;
        height: 20px;
        border-radius: 4px;
        margin-right: 10px;
    }

    /* Category dot */
    .category-dot {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 8px;
    }
</style>