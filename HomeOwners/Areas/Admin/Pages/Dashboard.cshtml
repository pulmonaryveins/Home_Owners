@page
@model HomeOwners.Areas.Admin.Pages.DashboardModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="~/css/nav.css" asp-append-version="true" />


<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" asp-area="Admin" asp-page="/Dashboard">
            <span class="brand-text">ADMIN DASHBOARD</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link active" asp-area="Admin" asp-page="/Dashboard">
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Users">
                        Users
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Services">Manage Services</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/ServiceRequests">Service Request</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Facilities">Manage Facilities</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/BookingRequests">Booking Requests</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle acitve" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Announcement">Manage Announcement</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Calendar">Manage Events</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Announcement">Manage Forum</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Announcement">Manage Polls</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Billing
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Billing">All Invoices</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Billing">Payment History</a></li>
                    </ul>
                </li>
            </ul>

            <!-- Profile Menu -->
            <div class="nav-items-right">
                <div class="nav-item dropdown profile-menu">
                    <a class="profile-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="profile-avatar">
                            <i class="bi bi-person-fill"></i>
                        </div>
                    </a>
                    <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                        <li class="dropdown-header">
                            <div class="user-info">
                                <span class="user-name">@(User.Identity?.Name ?? "Admin")</span>
                                <span class="user-role">Administrator</span>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" asp-area="Admin" asp-page="/Profile">
                                <i class="bi bi-person-gear"></i> Profile Settings
                            </a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item logout-item">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>

<!-- Dashboard welcome header -->
<div class="container dashboard-container">
    <div class="dashboard-welcome mb-4">
        <h1 class="welcome-title">Welcome, @(User.Identity?.Name ?? "Admin")!</h1>
        <p class="welcome-subtitle">Here's what's happening in your community today</p>
    </div>
    
    <!-- Stats Summary Cards -->
    <div class="row stats-cards">
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Total Residents</div>
                    <div class="stat-card-value">@Model.TotalUsers</div>
                    <div class="stat-card-change positive">
                        <i class="bi bi-arrow-up-right"></i> @Model.NewUsersPercentage% from last month
                    </div>
                </div>
                <div class="stat-card-icon user-icon">
                    <i class="bi bi-people-fill"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Active Services</div>
                    <div class="stat-card-value">@Model.ActiveServices</div>
                    <div class="stat-card-change positive">
                        <i class="bi bi-arrow-up-right"></i> @Model.ServiceGrowthRate% from last month
                    </div>
                </div>
                <div class="stat-card-icon service-icon">
                    <i class="bi bi-tools"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Pending Approvals</div>
                    <div class="stat-card-value">@Model.PendingApprovals</div>
                    <div class="stat-card-change @(Model.PendingApprovalsChange > 0 ? "negative" : "positive")">
                        <i class="bi @(Model.PendingApprovalsChange > 0 ? "bi-arrow-up-right" : "bi-arrow-down-right")"></i> 
                        @Math.Abs(Model.PendingApprovalsChange)% from last week
                    </div>
                </div>
                <div class="stat-card-icon approval-icon">
                    <i class="bi bi-clock-history"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Monthly Revenue</div>
                    <div class="stat-card-value">$@Model.MonthlyRevenue.ToString("N0")</div>
                    <div class="stat-card-change @(Model.RevenueChange >= 0 ? "positive" : "negative")">
                        <i class="bi @(Model.RevenueChange >= 0 ? "bi-arrow-up-right" : "bi-arrow-down-right")"></i> 
                        @Math.Abs(Model.RevenueChange)% from last month
                    </div>
                </div>
                <div class="stat-card-icon revenue-icon">
                    <i class="bi bi-currency-dollar"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mt-4">
        <div class="col-md-8">
            <div class="card dashboard-card chart-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-graph-up me-2"></i>Resident Activity Trends</h5>
                    <div class="dropdown">
                        <button class="btn btn-sm dropdown-toggle" type="button" id="timeRangeDropdown" data-bs-toggle="dropdown">
                            Last 6 Months
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="timeRangeDropdown">
                            <li><a class="dropdown-item" href="#" data-range="7">Last 7 Days</a></li>
                            <li><a class="dropdown-item" href="#" data-range="30">Last 30 Days</a></li>
                            <li><a class="dropdown-item" href="#" data-range="180">Last 6 Months</a></li>
                            <li><a class="dropdown-item" href="#" data-range="365">This Year</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body chart-container">
                    <canvas id="activityTrendsChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card dashboard-card chart-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-pie-chart-fill me-2"></i>Service Requests</h5>
                    <div class="dropdown">
                        <button class="btn btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            Current Month
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" href="#" data-period="week">This Week</a></li>
                            <li><a class="dropdown-item" href="#" data-period="month">Current Month</a></li>
                            <li><a class="dropdown-item" href="#" data-period="quarter">This Quarter</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body chart-container">
                    <canvas id="serviceRequestsChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities & Quick Stats -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card dashboard-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-activity me-2"></i>Recent Activity</h5>
                    <a href="#" class="btn btn-sm btn-outline-primary">View All</a>
                </div>
                <div class="card-body p-0">
                    <ul class="activity-list">
                        @foreach (var activity in Model.RecentActivities)
                        {
                            <li class="activity-item">
                                <div class="activity-icon @activity.IconClass">
                                    <i class="bi @activity.Icon"></i>
                                </div>
                                <div class="activity-content">
                                    <div class="activity-title">@activity.Title</div>
                                    <div class="activity-subtitle">@activity.Subtitle</div>
                                    <div class="activity-time">@activity.Time</div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card dashboard-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-calendar-check me-2"></i>Upcoming Events</h5>
                    <a href="#" class="btn btn-sm btn-outline-primary">Manage Calendar</a>
                </div>
                <div class="card-body p-0">
                    <ul class="event-list">
                        @foreach (var evt in Model.UpcomingEvents)
                        {
                            <li class="event-item">
                                <div class="event-date">
                                    <div class="event-month">@evt.StartTime.ToString("MMM")</div>
                                    <div class="event-day">@evt.StartTime.Day</div>
                                </div>
                                <div class="event-content">
                                    <div class="event-title">@evt.Title</div>
                                    <div class="event-details">
                                        <span><i class="bi bi-clock"></i> @evt.StartTime.ToString("h:mm tt") - @evt.EndTime.ToString("h:mm tt")</span>
                                        <span><i class="bi bi-geo-alt"></i> @evt.Location</span>
                                    </div>
                                </div>
                                <div class="event-actions">
                                    <a href="#" class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Third row with extra statistics -->
    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card dashboard-card">
                <div class="card-header">
                    <h5><i class="bi bi-bell me-2"></i>Pending User Approvals</h5>
                </div>
                <div class="card-body p-0">
                    <ul class="user-approval-list">
                        @if (Model.PendingUserApprovals.Any())
                        {
                            @foreach (var user in Model.PendingUserApprovals)
                            {
                                <li class="user-approval-item">
                                    <div class="user-info">
                                        <div class="user-avatar">
                                            <i class="bi bi-person-circle"></i>
                                        </div>
                                        <div class="user-details">
                                            <div class="user-name">@user.FullName</div>
                                            <div class="user-meta">
                                                <span>House #@user.HouseNumber</span>
                                                <span>@user.RequestDate.ToString("MMM d, yyyy")</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="user-actions">
                                        <button class="btn btn-sm btn-outline-success me-1" onclick="approveUser('@user.Id')">
                                            <i class="bi bi-check-lg"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" onclick="rejectUser('@user.Id')">
                                            <i class="bi bi-x-lg"></i>
                                        </button>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="no-data-item">
                                <div class="no-data-content">
                                    <i class="bi bi-check2-circle"></i>
                                    <p>No pending approvals</p>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card dashboard-card">
                <div class="card-header">
                    <h5><i class="bi bi-house-gear me-2"></i>Facility Usage</h5>
                </div>
                <div class="card-body chart-container">
                    <canvas id="facilityUsageChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card dashboard-card">
                <div class="card-header">
                    <h5><i class="bi bi-cash-stack me-2"></i>Payment Status</h5>
                </div>
                <div class="card-body chart-container">
                    <canvas id="paymentStatusChart"></canvas>
                    <div class="payment-status-legend mt-3">
                        <div class="payment-status-item">
                            <span class="status-dot paid"></span>
                            <span class="status-label">Paid</span>
                            <span class="status-value">@Model.PaymentStats.PaidPercentage%</span>
                        </div>
                        <div class="payment-status-item">
                            <span class="status-dot pending"></span>
                            <span class="status-label">Pending</span>
                            <span class="status-value">@Model.PaymentStats.PendingPercentage%</span>
                        </div>
                        <div class="payment-status-item">
                            <span class="status-dot overdue"></span>
                            <span class="status-label">Overdue</span>
                            <span class="status-value">@Model.PaymentStats.OverduePercentage%</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        --body-bg: #f9f9f9;
    }

    body {
        background-color: var(--body-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Dashboard container */
    .dashboard-container {
        margin-top: 5rem;
        padding-bottom: 2rem;
    }

    .dashboard-welcome {
        padding: 1.5rem 0;
        border-bottom: 1px solid rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .welcome-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .welcome-subtitle {
        color: var(--text-muted);
        font-size: 1.1rem;
    }

    /* Stats Cards */
    .stats-cards {
        margin-bottom: 1.5rem;
    }
    
    .stat-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        padding: 1.25rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }
    
    .stat-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(0,0,0,0.1);
    }
    
    .stat-card-content {
        z-index: 1;
    }
    
    .stat-card-title {
        font-size: 0.9rem;
        color: var(--text-muted);
        margin-bottom: 0.5rem;
        font-weight: 500;
    }
    
    .stat-card-value {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
    }
    
    .stat-card-change {
        font-size: 0.8rem;
        display: flex;
        align-items: center;
    }
    
    .stat-card-change.positive {
        color: var(--success-color);
    }
    
    .stat-card-change.negative {
        color: var(--danger-color);
    }
    
    .stat-card-change.neutral {
        color: var(--text-muted);
    }
    
    .stat-card-icon {
        font-size: 2rem;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 12px;
        color: white;
    }
    
    .user-icon {
        background-color: var(--primary-color);
    }
    
    .service-icon {
        background-color: var(--info-color);
    }
    
    .approval-icon {
        background-color: var(--warning-color);
    }
    
    .revenue-icon {
        background-color: var(--success-color);
    }

    /* Chart Cards */
    .chart-card {
        margin-bottom: 1.5rem;
    }
    
    .chart-card .card-header {
        background-color: white;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 1rem 1.25rem;
    }
    
    .chart-card .card-header h5 {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
        color: var(--primary-color);
        display: flex;
        align-items: center;
    }
    
    .chart-card .dropdown-toggle {
        background: transparent;
        color: var(--text-muted);
        border: 1px solid rgba(0,0,0,0.1);
        font-size: 0.85rem;
    }
    
    .chart-card .dropdown-toggle:hover {
        background-color: var(--primary-lighter);
        color: var(--primary-color);
    }
    
    .chart-container {
        position: relative;
        height: 250px;
        overflow: hidden;
    }
    
    .chart-container canvas {
        max-width: 100%;
    }

    /* Activity List */
    .activity-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .activity-item {
        display: flex;
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: background-color 0.2s ease;
    }
    
    .activity-item:last-child {
        border-bottom: none;
    }
    
    .activity-item:hover {
        background-color: var(--primary-lighter);
    }
    
    .activity-icon {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        margin-right: 1rem;
        flex-shrink: 0;
    }
    
    .activity-content {
        flex: 1;
    }
    
    .activity-title {
        font-weight: 500;
        margin-bottom: 0.25rem;
        color: var(--text-dark);
    }
    
    .activity-subtitle {
        font-size: 0.85rem;
        color: var(--text-muted);
        margin-bottom: 0.25rem;
    }
    
    .activity-time {
        font-size: 0.75rem;
        color: var(--text-muted);
        opacity: 0.8;
    }

    .bg-primary {
        background-color: var(--primary-color) !important;
    }

    .bg-success {
        background-color: var(--success-color) !important;
    }
    
    .bg-warning {
        background-color: var(--warning-color) !important;
    }
    
    .bg-danger {
        background-color: var(--danger-color) !important;
    }
    
    .bg-info {
        background-color: var(--info-color) !important;
    }

    /* Dashboard cards */
    .dashboard-card {
        height: 100%;
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }

    .dashboard-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(0,0,0,0.1);
    }

    .dashboard-card .card-header {
        background-color: white;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 1rem 1.25rem;
    }

    .dashboard-card .card-header h5 {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
        color: var(--primary-color);
        display: flex;
        align-items: center;
    }

    /* Event list */
    .event-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .event-item {
        display: flex;
        align-items: center;
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: background-color 0.2s ease;
    }

    .event-item:last-child {
        border-bottom: none;
    }

    .event-item:hover {
        background-color: var(--primary-lighter);
    }

    .event-date {
        width: 50px;
        height: 50px;
        background-color: var(--primary-light);
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-right: 1rem;
        color: var(--primary-color);
    }

    .event-month {
        font-size: 0.7rem;
        font-weight: 600;
        text-transform: uppercase;
    }

    .event-day {
        font-size: 1.2rem;
        font-weight: 700;
    }

    .event-content {
        flex: 1;
    }

    .event-title {
        font-weight: 500;
        margin-bottom: 0.25rem;
        color: var(--text-dark);
    }

    .event-details {
        display: flex;
        font-size: 0.8rem;
        color: var(--text-muted);
        gap: 1rem;
    }

    .event-details span {
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .event-actions {
        margin-left: 0.5rem;
    }

    /* User Approval List */
    .user-approval-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .user-approval-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: background-color 0.2s ease;
    }

    .user-approval-item:last-child {
        border-bottom: none;
    }

    .user-approval-item:hover {
        background-color: var(--primary-lighter);
    }

    .no-data-item {
        display: flex;
        justify-content: center;
        padding: 2rem 1.25rem;
    }

    .no-data-content {
        text-align: center;
        color: var(--text-muted);
    }

    .no-data-content i {
        font-size: 2rem;
        margin-bottom: 0.5rem;
        color: var(--primary-color);
    }

    /* Payment status */
    .payment-status-legend {
        display: flex;
        justify-content: space-between;
    }

    .payment-status-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-dot {
        width: 10px;
        height: 10px;
        border-radius: 50%;
    }

    .status-dot.paid {
        background-color: var(--success-color);
    }

    .status-dot.pending {
        background-color: var(--warning-color);
    }

    .status-dot.overdue {
        background-color: var(--danger-color);
    }

    .status-label {
        font-size: 0.8rem;
        color: var(--text-muted);
    }

    .status-value {
        font-size: 0.8rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    /* Buttons styling */
    .btn-primary, .btn-outline-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-primary:hover, .btn-outline-primary:hover {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
    }

    .btn-outline-primary {
        color: var(--primary-color);
        background-color: transparent;
    }

    .btn-outline-primary:hover {
        color: white;
    }
</style>

<script>
    // Initialize charts when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Set chart defaults to match theme
        Chart.defaults.color = '#6c757d';
        Chart.defaults.font.family = "'Segoe UI', 'Helvetica Neue', 'Arial', sans-serif";
        
        // Activity Trends Chart
        const activityTrendsCtx = document.getElementById('activityTrendsChart');
        if (activityTrendsCtx) {
            const activityData = {
                labels: @Html.Raw(Json.Serialize(Model.ActivityTrends.Labels)),
                datasets: [
                    {
                        label: 'New Registrations',
                        data: @Html.Raw(Json.Serialize(Model.ActivityTrends.RegistrationData)),
                        borderColor: '#4e6e4d',
                        backgroundColor: 'rgba(78, 110, 77, 0.1)',
                        tension: 0.3,
                        fill: true
                    },
                    {
                        label: 'Service Requests',
                        data: @Html.Raw(Json.Serialize(Model.ActivityTrends.ServiceRequestData)),
                        borderColor: '#17a2b8',
                        backgroundColor: 'rgba(23, 162, 184, 0.1)',
                        tension: 0.3,
                        fill: true
                    }
                ]
            };
            
            new Chart(activityTrendsCtx, {
                type: 'line',
                data: activityData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                            align: 'end',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    }
                }
            });
        }
        
        // Service Requests Chart
        const serviceRequestsCtx = document.getElementById('serviceRequestsChart');
        if (serviceRequestsCtx) {
            const serviceData = {
                labels: ['Open', 'In Progress', 'Completed', 'Cancelled'],
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.ServiceStats)),
                    backgroundColor: ['#ffc107', '#17a2b8', '#28a745', '#dc3545'],
                    borderWidth: 0
                }]
            };
            
            new Chart(serviceRequestsCtx, {
                type: 'doughnut',
                data: serviceData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        }
                    },
                    cutout: '65%'
                }
            });
        }
        
        // Facility Usage Chart
        const facilityUsageCtx = document.getElementById('facilityUsageChart');
        if (facilityUsageCtx) {
            const facilityData = {
                labels: @Html.Raw(Json.Serialize(Model.FacilityUsage.Labels)),
                datasets: [{
                    label: 'Usage Count',
                    data: @Html.Raw(Json.Serialize(Model.FacilityUsage.Data)),
                    backgroundColor: '#4e6e4d',
                    borderRadius: 4
                }]
            };
            
            new Chart(facilityUsageCtx, {
                type: 'bar',
                data: facilityData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }
        
        // Payment Status Chart
        const paymentStatusCtx = document.getElementById('paymentStatusChart');
        if (paymentStatusCtx) {
            const paymentData = {
                labels: ['Paid', 'Pending', 'Overdue'],
                datasets: [{
                    data: [
                        @Model.PaymentStats.PaidPercentage, 
                        @Model.PaymentStats.PendingPercentage, 
                        @Model.PaymentStats.OverduePercentage
                    ],
                    backgroundColor: ['#28a745', '#ffc107', '#dc3545'],
                    borderWidth: 0
                }]
            };
            
            new Chart(paymentStatusCtx, {
                type: 'pie',
                data: paymentData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.label + ': ' + context.raw + '%';
                                }
                            }
                        }
                    }
                }
            });
        }

        // Handle time range dropdown for activity chart
        document.querySelectorAll('[data-range]').forEach(item => {
            item.addEventListener('click', event => {
                event.preventDefault();
                const days = event.target.dataset.range;
                document.getElementById('timeRangeDropdown').textContent = event.target.textContent;
                // Here you would fetch new data and update the chart
                console.log(`Fetch data for last ${days} days`);
            });
        });

        // Handle user approval actions
        window.approveUser = function(userId) {
            // Add AJAX call to approve user
            console.log(`Approving user ${userId}`);
            // On success, refresh the list or remove the item
        };

        window.rejectUser = function(userId) {
            // Add AJAX call to reject user
            console.log(`Rejecting user ${userId}`);
            // On success, refresh the list or remove the item
        };
    });
</script>