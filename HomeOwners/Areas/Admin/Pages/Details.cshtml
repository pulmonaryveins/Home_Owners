@page "{id}"
@model HomeOwners.Areas.Admin.Pages.DetailsModel
@{
    ViewData["Title"] = "User Details";
}

<div class="container mt-5 pt-3">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>User Details</h1>
                <div>
                    <a asp-page="./Edit" asp-route-id="@Model.UserDetails.Id" class="btn btn-primary">
                        <i class="bi bi-pencil"></i> Edit
                    </a>
                    <a asp-page="./Users" class="btn btn-outline-secondary ms-2">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <div class="d-flex align-items-center">
                        <div class="avatar me-3 bg-light rounded-circle text-center" style="width: 48px; height: 48px;">
                            <i class="bi bi-person text-muted" style="font-size: 1.5rem; line-height: 48px;"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">@Model.UserDetails.UserName</h5>
                            <small class="text-muted">
                                @foreach (var role in Model.UserRoles)
                                {
                                    <span class="badge bg-primary me-1">@role</span>
                                }
                            </small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Username</dt>
                        <dd class="col-sm-9">@Model.UserDetails.UserName</dd>

                        <dt class="col-sm-3">Email</dt>
                        <dd class="col-sm-9">@Model.UserDetails.Email</dd>

                        <dt class="col-sm-3">Email Confirmed</dt>
                        <dd class="col-sm-9">
                            @if (Model.UserDetails.EmailConfirmed)
                            {
                                <span class="badge bg-success">Confirmed</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Not Confirmed</span>
                            }
                        </dd>

                        <dt class="col-sm-3">Phone Number</dt>
                        <dd class="col-sm-9">
                            @(string.IsNullOrEmpty(Model.UserDetails.PhoneNumber) ? "Not provided" : Model.UserDetails.PhoneNumber)
                        </dd>

                        <dt class="col-sm-3">Phone Confirmed</dt>
                        <dd class="col-sm-9">
                            @if (Model.UserDetails.PhoneNumberConfirmed)
                            {
                                <span class="badge bg-success">Confirmed</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Not Confirmed</span>
                            }
                        </dd>

                        <dt class="col-sm-3">Two Factor Enabled</dt>
                        <dd class="col-sm-9">
                            @if (Model.UserDetails.TwoFactorEnabled)
                            {
                                <span class="badge bg-success">Enabled</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Disabled</span>
                            }
                        </dd>

                        <dt class="col-sm-3">Lockout Enabled</dt>
                        <dd class="col-sm-9">
                            @if (Model.UserDetails.LockoutEnabled)
                            {
                                <span class="badge bg-info">Enabled</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Disabled</span>
                            }
                        </dd>

                        <dt class="col-sm-3">Account Status</dt>
                        <dd class="col-sm-9">
                            @if (Model.UserDetails.LockoutEnd != null && Model.UserDetails.LockoutEnd > DateTimeOffset.Now)
                            {
                                <span class="badge bg-danger">Locked Out</span>
                                <small class="text-muted d-block">Until: @Model.UserDetails.LockoutEnd.Value.LocalDateTime.ToString("g")</small>
                            }
                            else
                            {
                                <span class="badge bg-success">Active</span>
                            }
                        </dd>

                        <dt class="col-sm-3">Joined Date</dt>
                        <dd class="col-sm-9">
                            @(Model.UserDetails.CreatedDate?.ToString("MMMM dd, yyyy") ?? "Unknown")
                        </dd>

                        <dt class="col-sm-3">Roles</dt>
                        <dd class="col-sm-9">
                            @if (Model.UserRoles.Any())
                            {
                                foreach (var role in Model.UserRoles)
                                {
                                    <span class="badge bg-primary me-1">@role</span>
                                }
                            }
                            else
                            {
                                <span class="text-muted">No roles assigned</span>
                            }
                        </dd>
                    </dl>
                </div>
                <div class="card-footer bg-white d-flex justify-content-between">
                    <a asp-page="./Delete" asp-route-id="@Model.UserDetails.Id" class="btn btn-outline-danger">
                        <i class="bi bi-trash"></i> Delete User
                    </a>
                    <div>
                        <a asp-page="./Edit" asp-route-id="@Model.UserDetails.Id" class="btn btn-outline-primary">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a asp-page="./Users" class="btn btn-outline-secondary ms-2">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
