@page
@model HomeOwners.Areas.Admin.Pages.Polls.CreateModel
@{
    ViewData["Title"] = "Create Poll";
}

<div class="container dashboard-container">
    <div class="page-header d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">
                <i class="bi bi-plus-circle me-2"></i>Create New Poll
            </h2>
            <p class="text-muted mb-0">Create a new community poll</p>
        </div>
        <a asp-page="./Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
    </div>

    @if (TempData["StatusMessage"] != null)
    {
        <div class="alert @(TempData["StatusType"]?.ToString() == "Error" ? "alert-danger" : "alert-success") alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi @(TempData["StatusType"]?.ToString() == "Error" ? "bi-exclamation-triangle" : "bi-check-circle") me-2"></i>
                <span>@TempData["StatusMessage"]</span>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-body p-4">
            <form method="post" id="createPollForm">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                <div class="mb-4">
                    <label asp-for="Poll.Question" class="form-label required">Question</label>
                    <input asp-for="Poll.Question" class="form-control form-control-lg" />
                    <span asp-validation-for="Poll.Question" class="text-danger"></span>
                </div>

                <div class="mb-4">
                    <label class="form-label required">Poll Options</label>
                    <div id="pollOptions">
                        @for (var i = 0; i < Model.Poll.Options.Count; i++)
                        {
                            <div class="input-group mb-2">
                                <input asp-for="Poll.Options[i].OptionText" class="form-control" placeholder="Enter option text" />
                                <button type="button" class="btn btn-outline-danger remove-option">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        }
                    </div>
                    <button type="button" id="addOption" class="btn btn-outline-primary mt-2">
                        <i class="bi bi-plus"></i> Add Option
                    </button>
                </div>

                <div class="mb-4">
                    <div class="form-check form-switch">
                        <input asp-for="Poll.IsActive" class="form-check-input" type="checkbox" />
                        <label asp-for="Poll.IsActive" class="form-check-label">Make poll active immediately</label>
                    </div>
                </div>

                <hr class="my-4" />

                <div class="d-flex justify-content-end gap-2">
                    <a asp-page="./Index" class="btn btn-light px-4">Cancel</a>
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="bi bi-check2"></i> Create Poll
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const pollOptions = document.getElementById('pollOptions');
            const addOptionBtn = document.getElementById('addOption');

            addOptionBtn.addEventListener('click', function() {
                const optionCount = pollOptions.children.length;
                const newOption = document.createElement('div');
                newOption.className = 'input-group mb-2';
                newOption.innerHTML = `
                    <input name="Poll.Options[${optionCount}].OptionText"
                           class="form-control"
                           placeholder="Enter option text" />
                    <button type="button" class="btn btn-outline-danger remove-option">
                        <i class="bi bi-trash"></i>
                    </button>
                `;
                pollOptions.appendChild(newOption);
            });

            pollOptions.addEventListener('click', function(e) {
                if (e.target.closest('.remove-option')) {
                    const optionDiv = e.target.closest('.input-group');
                    if (pollOptions.children.length > 2) {
                        optionDiv.remove();
                        reindexOptions();
                    } else {
                        alert('A poll must have at least 2 options');
                    }
                }
            });

            function reindexOptions() {
                const options = pollOptions.children;
                for (let i = 0; i < options.length; i++) {
                    const input = options[i].querySelector('input');
                    input.name = `Poll.Options[${i}].OptionText`;
                }
            }
        });
    </script>
}
