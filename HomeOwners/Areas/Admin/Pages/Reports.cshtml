@page
@model HomeOwners.Areas.Admin.Pages.ReportsModel
@{
    ViewData["Title"] = "System Reports";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="~/css/nav.css" asp-append-version="true" />

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" asp-area="Admin" asp-page="/Dashboard">
            <span class="brand-text">ADMIN DASHBOARD</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Dashboard">
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Admin" asp-page="/Users">
                        Users
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Services">Manage Services</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/ServiceRequests">Service Request</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/ServicePersonnel">Service Personnel</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Facilities">Manage Facilities</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/BookingRequests">Booking Requests</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Announcement">Manage Announcement</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Calendar">Manage Events</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/ManageForum">Manage Forum</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/ManagePolls">Manage Polls</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Billing
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Billing">All Invoices</a></li>
                        <li><a class="dropdown-item" asp-area="Admin" asp-page="/Billing">Payment History</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" asp-area="Admin" asp-page="/Reports">
                        Reports
                    </a>
                </li>
            </ul>

            <!-- Profile Menu -->
            <div class="nav-items-right">
                <div class="nav-item dropdown profile-menu">
                    <a class="profile-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="profile-avatar">
                            <i class="bi bi-person-fill"></i>
                        </div>
                    </a>
                    <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                        <li class="dropdown-header">
                            <div class="user-info">
                                <span class="user-name">@(User.Identity?.Name ?? "Admin")</span>
                                <span class="user-role">Administrator</span>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" asp-area="Admin" asp-page="/Profile">
                                <i class="bi bi-person-gear"></i> Profile Settings
                            </a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item logout-item">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>

<div class="container reports-container">
    <!-- Page header with time range filter -->
    <div class="reports-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="reports-title">System Reports</h1>
                <p class="reports-subtitle">Comprehensive analytics and statistics for your community</p>
            </div>
            <div class="time-filter">
                <form method="get" class="d-flex align-items-center">
                    <label for="timeRange" class="me-2">Time Range:</label>
                    <select id="timeRange" name="TimeRange" class="form-select" onchange="this.form.submit()">
                        <option value="week" selected="@(Model.TimeRange == "week")">Last 7 Days</option>
                        <option value="month" selected="@(Model.TimeRange == "month")">Last 30 Days</option>
                        <option value="quarter" selected="@(Model.TimeRange == "quarter")">Last 3 Months</option>
                        <option value="year" selected="@(Model.TimeRange == "year")">Last 12 Months</option>
                    </select>
                </form>
            </div>
        </div>
        <div class="report-actions mt-3">
            <button class="btn btn-sm btn-outline-primary me-2" onclick="window.print()">
                <i class="bi bi-printer"></i> Print Report
            </button>
            <button class="btn btn-sm btn-outline-primary me-2" id="exportPdf">
                <i class="bi bi-file-pdf"></i> Export as PDF
            </button>
            <button class="btn btn-sm btn-outline-primary" id="exportCsv">
                <i class="bi bi-file-excel"></i> Export as CSV
            </button>
        </div>
    </div>

    <div class="row">
        <!-- Revenue Overview Section -->
        <div class="col-12">
            <div class="report-section">
                <div class="section-header">
                    <h2>
                        <i class="bi bi-cash-coin"></i>
                        Revenue Overview
                    </h2>
                </div>
                <div class="section-body">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="chart-container">
                                <canvas id="revenueChart"></canvas>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stats-summary">
                                <div class="summary-item">
                                    <h3>Total Revenue</h3>
                                    <div class="summary-value">₱@Model.Revenue.TotalRevenue.ToString("N0")</div>
                                    <div class="summary-change @(Model.Revenue.ChangePercentage >= 0 ? "positive" : "negative")">
                                        <i class="bi @(Model.Revenue.ChangePercentage >= 0 ? "bi-arrow-up-right" : "bi-arrow-down-right")"></i>
                                        @Math.Abs(Model.Revenue.ChangePercentage).ToString("N1")% from previous period
                                    </div>
                                </div>

                                <div class="payment-methods mt-4">
                                    <h4>Payment Methods</h4>
                                    @foreach (var method in Model.Revenue.PaymentMethods)
                                    {
                                        <div class="payment-method-item">
                                            <div class="d-flex justify-content-between">
                                                <span>@method.Method</span>
                                                <span>₱@method.Amount.ToString("N0") (@method.Percentage.ToString("N1")%)</span>
                                            </div>
                                            <div class="progress mt-1">
                                                <div class="progress-bar" role="progressbar" style="width: @method.Percentage%"></div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- User Statistics Section -->
        <div class="col-md-6">
            <div class="report-section">
                <div class="section-header">
                    <h2>
                        <i class="bi bi-people"></i>
                        User Statistics
                    </h2>
                </div>
                <div class="section-body">
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="stat-card">
                                <div class="stat-title">Total Users</div>
                                <div class="stat-value">@Model.UserStats.TotalUsers</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card">
                                <div class="stat-title">New Users</div>
                                <div class="stat-value">@Model.UserStats.NewUsers</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card">
                                <div class="stat-title">Active Users</div>
                                <div class="stat-value">@Model.UserStats.ActiveUsers</div>
                                <div class="stat-percentage">@Model.UserStats.ActivePercentage.ToString("N1")%</div>
                            </div>
                        </div>
                    </div>
                    <div class="chart-container">
                        <canvas id="userGrowthChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Service Request Statistics Section -->
        <div class="col-md-6">
            <div class="report-section">
                <div class="section-header">
                    <h2>
                        <i class="bi bi-tools"></i>
                        Service Request Analytics
                    </h2>
                </div>
                <div class="section-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="stat-card">
                                <div class="stat-title">Total Requests</div>
                                <div class="stat-value">@Model.ServiceStats.TotalRequests</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="stat-card">
                                <div class="stat-title">Avg. Resolution Time</div>
                                <div class="stat-value">
                                    @if (Model.ServiceStats.AvgResolutionTime.TotalHours < 24)
                                    {
                                        @Math.Round(Model.ServiceStats.AvgResolutionTime.TotalHours, 1) <span>hours</span>
                                    }
                                    else
                                    {
                                        @Math.Round(Model.ServiceStats.AvgResolutionTime.TotalDays, 1) <span>days</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Request Status</h5>
                            <div class="chart-container">
                                <canvas id="serviceStatusChart"></canvas>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5>Request Volume</h5>
                            <div class="chart-container">
                                <canvas id="serviceVolumeChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Facility Statistics Section -->
        <div class="col-md-6">
            <div class="report-section">
                <div class="section-header">
                    <h2>
                        <i class="bi bi-building"></i>
                        Facility Analytics
                    </h2>
                </div>
                <div class="section-body">
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <div class="stat-card">
                                <div class="stat-title">Total Facilities</div>
                                <div class="stat-value">@Model.FacilityStatistics.TotalFacilities</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card">
                                <div class="stat-title">Total Bookings</div>
                                <div class="stat-value">@Model.FacilityStatistics.TotalBookings</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card">
                                <div class="stat-title">Occupancy Rate</div>
                                <div class="stat-value">@Model.FacilityStatistics.OccupancyRate.ToString("N1")%</div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Most Popular Facilities</h5>
                            <div class="chart-container">
                                <canvas id="facilityPopularityChart"></canvas>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5>Revenue by Facility</h5>
                            <div class="chart-container">
                                <canvas id="facilityRevenueChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Forum Activity Section -->
        <div class="col-md-6">
            <div class="report-section">
                <div class="section-header">
                    <h2>
                        <i class="bi bi-chat-left-text"></i>
                        Forum Activity
                    </h2>
                </div>
                <div class="section-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="stat-card">
                                <div class="stat-title">Total Posts</div>
                                <div class="stat-value">@Model.ForumActivity.TotalPosts</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="stat-card">
                                <div class="stat-title">Total Comments</div>
                                <div class="stat-value">@Model.ForumActivity.TotalComments</div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Popular Categories</h5>
                            <div class="chart-container">
                                <canvas id="categoryActivityChart"></canvas>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5>Activity Trend</h5>
                            <div class="chart-container">
                                <canvas id="forumActivityChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
    }

    body {
        background-color: #f9f9f9;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .reports-container {
        margin-top: 5rem;
        padding-bottom: 2rem;
    }

    .reports-header {
        padding: 1.5rem 0;
        border-bottom: 1px solid rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .reports-title {
        font-size: 2rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .reports-subtitle {
        color: var(--text-muted);
        font-size: 1.1rem;
    }

    .report-section {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        margin-bottom: 2rem;
        overflow: hidden;
    }

    .section-header {
        padding: 1.25rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    .section-header h2 {
        margin: 0;
        font-size: 1.4rem;
        font-weight: 600;
        color: var(--primary-color);
        display: flex;
        align-items: center;
    }

    .section-header h2 i {
        margin-right: 0.75rem;
    }

    .section-body {
        padding: 1.5rem;
    }

    .chart-container {
        position: relative;
        height: 250px;
        margin-bottom: 1rem;
    }

    .stats-summary {
        padding: 0 0.5rem;
    }

    .summary-item {
        text-align: center;
        padding: 1rem;
        border-radius: 8px;
        background-color: var(--primary-lighter);
    }

    .summary-item h3 {
        font-size: 1.1rem;
        color: var(--text-muted);
        margin-bottom: 0.5rem;
    }

    .summary-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 0.25rem;
    }

    .summary-change {
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.25rem;
    }

    .summary-change.positive {
        color: var(--success-color);
    }

    .summary-change.negative {
        color: var(--danger-color);
    }

    .payment-methods h4 {
        font-size: 1rem;
        color: var(--text-dark);
        margin-bottom: 1rem;
    }

    .payment-method-item {
        margin-bottom: 1rem;
        font-size: 0.9rem;
    }

    .progress {
        height: 6px;
        border-radius: 3px;
    }

    .progress-bar {
        background-color: var(--primary-color);
    }

    .stat-card {
        background: var(--primary-lighter);
        padding: 1rem;
        border-radius: 8px;
        text-align: center;
        margin-bottom: 1rem;
    }

    .stat-title {
        font-size: 0.9rem;
        color: var(--text-muted);
        margin-bottom: 0.5rem;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--primary-color);
    }

    .stat-percentage {
        font-size: 0.8rem;
        color: var(--text-muted);
        margin-top: 0.25rem;
    }

    h5 {
        font-size: 1rem;
        color: var(--text-dark);
        margin-bottom: 1rem;
    }

    .report-actions button {
        border-color: var(--primary-color);
        color: var(--primary-color);
    }

    .report-actions button:hover {
        background-color: var(--primary-color);
        color: white;
    }

    .time-filter .form-select {
        max-width: 180px;
        border-color: var(--primary-color);
    }

    .time-filter .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem var(--primary-light);
    }

    /* Make it more print-friendly */
    @@media print {
        nav, .report-actions, .time-filter {
            display: none !important;
        }

        .reports-container {
            margin-top: 0;
        }

        .report-section {
            break-inside: avoid;
            box-shadow: none;
            border: 1px solid #ddd;
        }

        body {
            background-color: white;
        }
    }
</style>

<script>
    // Initialize charts when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Set chart defaults to match theme
        Chart.defaults.color = '#6c757d';
        Chart.defaults.font.family = "'Segoe UI', 'Helvetica Neue', 'Arial', sans-serif";

        // Revenue Chart
        const revenueCtx = document.getElementById('revenueChart');
        if (revenueCtx) {
            new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: @Json.Serialize(Model.Revenue.Labels),
                    datasets: [{
                        label: 'Revenue',
                        data: @Json.Serialize(Model.Revenue.Data),
                        borderColor: '#4e6e4d',
                        backgroundColor: 'rgba(78, 110, 77, 0.1)',
                        tension: 0.3,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '₱' + value.toLocaleString();
                                }
                            },
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Revenue Trend'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'Revenue: ₱' + context.raw.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });
        }

        // User Growth Chart
        const userGrowthCtx = document.getElementById('userGrowthChart');
        if (userGrowthCtx) {
            new Chart(userGrowthCtx, {
                type: 'bar',
                data: {
                    labels: @Json.Serialize(Model.UserStats.GrowthLabels),
                    datasets: [{
                        label: 'New Users',
                        data: @Json.Serialize(Model.UserStats.GrowthData),
                        backgroundColor: '#4e6e4d',
                        borderRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'User Growth'
                        }
                    }
                }
            });
        }

        // Service Status Chart
        const serviceStatusCtx = document.getElementById('serviceStatusChart');
        if (serviceStatusCtx) {
            new Chart(serviceStatusCtx, {
                type: 'doughnut',
                data: {
                    labels: @Json.Serialize(Model.ServiceStats.StatusLabels),
                    datasets: [{
                        data: @Json.Serialize(Model.ServiceStats.StatusData),
                        backgroundColor: ['#ffc107', '#17a2b8', '#28a745', '#dc3545'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        }
                    },
                    cutout: '65%'
                }
            });
        }

        // Service Volume Chart
        const serviceVolumeCtx = document.getElementById('serviceVolumeChart');
        if (serviceVolumeCtx) {
            new Chart(serviceVolumeCtx, {
                type: 'line',
                data: {
                    labels: @Json.Serialize(Model.ServiceStats.VolumeLabels),
                    datasets: [{
                        label: 'Requests',
                        data: @Json.Serialize(Model.ServiceStats.VolumeData),
                        borderColor: '#17a2b8',
                        backgroundColor: 'rgba(23, 162, 184, 0.1)',
                        tension: 0.3,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            },
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        // Facility Popularity Chart
        const facilityPopularityCtx = document.getElementById('facilityPopularityChart');
        if (facilityPopularityCtx) {
            new Chart(facilityPopularityCtx, {
                type: 'bar',
                data: {
                    labels: @Json.Serialize(Model.FacilityStatistics.PopularFacilityLabels),
                    datasets: [{
                        label: 'Bookings',
                        data: @Json.Serialize(Model.FacilityStatistics.PopularFacilityData),
                        backgroundColor: '#4e6e4d',
                        borderRadius: 4
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        y: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        // Facility Revenue Chart
        const facilityRevenueCtx = document.getElementById('facilityRevenueChart');
        if (facilityRevenueCtx) {
            new Chart(facilityRevenueCtx, {
                type: 'pie',
                data: {
                    labels: @Json.Serialize(Model.FacilityStatistics.RevenueFacilityLabels),
                    datasets: [{
                        data: @Json.Serialize(Model.FacilityStatistics.RevenueFacilityData),
                        backgroundColor: ['#4e6e4d', '#17a2b8', '#28a745', '#ffc107', '#dc3545'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.label + ': ₱' + context.raw.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });
        }

        // Category Activity Chart
        const categoryActivityCtx = document.getElementById('categoryActivityChart');
        if (categoryActivityCtx) {
            new Chart(categoryActivityCtx, {
                type: 'polarArea',
                data: {
                    labels: @Json.Serialize(Model.ForumActivity.CategoryLabels),
                    datasets: [{
                        data: @Json.Serialize(Model.ForumActivity.CategoryData),
                        backgroundColor: ['#4e6e4d', '#17a2b8', '#28a745', '#ffc107', '#dc3545'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        r: {
                            ticks: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 10
                                }
                            }
                        }
                    }
                }
            });
        }

        // Forum Activity Chart
        const forumActivityCtx = document.getElementById('forumActivityChart');
        if (forumActivityCtx) {
            new Chart(forumActivityCtx, {
                type: 'line',
                data: {
                    labels: @Json.Serialize(Model.ForumActivity.ActivityLabels),
                    datasets: [
                        {
                            label: 'Posts',
                            data: @Json.Serialize(Model.ForumActivity.PostsData),
                            borderColor: '#4e6e4d',
                            backgroundColor: 'rgba(78, 110, 77, 0.1)',
                            tension: 0.3,
                            fill: true
                        },
                        {
                            label: 'Comments',
                            data: @Json.Serialize(Model.ForumActivity.CommentsData),
                            borderColor: '#17a2b8',
                            backgroundColor: 'rgba(23, 162, 184, 0.1)',
                            tension: 0.3,
                            fill: true
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            },
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        }
                    }
                }
            });
        }

        // Handle export buttons (these would need backend implementation or third-party libraries)
        document.getElementById('exportPdf').addEventListener('click', function() {
            alert('PDF export functionality would be implemented with a PDF generation library like PDFSharp or iTextSharp');
        });

        document.getElementById('exportCsv').addEventListener('click', function() {
            alert('CSV export functionality would be implemented to download the raw report data');
        });
    });
</script>