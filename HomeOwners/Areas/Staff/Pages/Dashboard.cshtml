@page
@using HomeOwners.Models
@model HomeOwners.Areas.Staff.Pages.DashboardModel
@{
    ViewData["Title"] = "Staff Dashboard";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="~/css/nav.css" asp-append-version="true" />

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" asp-area="Staff" asp-page="/Dashboard">
            <span class="brand-text">STAFF DASHBOARD</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link active" asp-area="Staff" asp-page="/Dashboard">
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Staff" asp-page="/Users">
                        Users
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Staff" asp-page="/Tasks">
                        Task
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Services">Manage Services</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ServiceRequests">Service Request</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ServicePersonnel">Service Personnel</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Facilities">Manage Facilities</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/BookingRequests">Booking Requests</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle acitve" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Announcement">Manage Announcement</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Calendar">Manage Events</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ManageForum">Manage Forum</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ManagePolls">Manage Polls</a></li>
                    </ul>
                </li>
            </ul>

            <!-- Profile Menu -->
            <div class="nav-items-right">
                <div class="nav-item dropdown profile-menu">
                    <a class="profile-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="profile-avatar">
                            <i class="bi bi-person-fill"></i>
                        </div>
                    </a>
                    <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                        <li class="dropdown-header">
                            <div class="user-info">
                                <span class="user-name">@(User.Identity?.Name ?? "Admin")</span>
                                <span class="user-role">Staff Personnel</span>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" asp-area="Admin" asp-page="/Profile">
                                <i class="bi bi-person-gear"></i> Profile Settings
                            </a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item logout-item">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>

<!-- Dashboard welcome header -->
<div class="container dashboard-container">
    <div class="dashboard-welcome mb-4">
        <h1 class="welcome-title">Welcome, @User.Identity?.Name!</h1>
        <p class="welcome-subtitle">Here's what's happening in your community today</p>
    </div>

    <!-- Stats Summary Cards -->
    <div class="row stats-cards">
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Total Users</div>
                    <div class="stat-card-value">@Model.TotalUsers</div>
                    <div class="stat-card-change @(Model.UserGrowthRate > 0 ? "positive" : Model.UserGrowthRate < 0 ? "negative" : "neutral")">
                        <i class="bi @(Model.UserGrowthRate > 0 ? "bi-arrow-up-right" : Model.UserGrowthRate < 0 ? "bi-arrow-down-right" : "bi-dash")"></i>
                        @Math.Abs(Model.UserGrowthRate)% from last month
                    </div>
                </div>
                <div class="stat-card-icon user-icon">
                    <i class="bi bi-people-fill"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Active Services</div>
                    <div class="stat-card-value">@Model.ActiveServices</div>
                    <div class="stat-card-change @(Model.ServiceGrowthRate > 0 ? "positive" : Model.ServiceGrowthRate < 0 ? "negative" : "neutral")">
                        <i class="bi @(Model.ServiceGrowthRate > 0 ? "bi-arrow-up-right" : Model.ServiceGrowthRate < 0 ? "bi-arrow-down-right" : "bi-dash")"></i>
                        @Math.Abs(Model.ServiceGrowthRate)% from last month
                    </div>
                </div>
                <div class="stat-card-icon service-icon">
                    <i class="bi bi-tools"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Facilities</div>
                    <div class="stat-card-value">@Model.TotalFacilities</div>
                    <div class="stat-card-change neutral">
                        <i class="bi bi-dash"></i> No change
                    </div>
                </div>
                <div class="stat-card-icon approval-icon">
                    <i class="bi bi-building"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-card-title">Pending Requests</div>
                    <div class="stat-card-value">@Model.PendingRequests</div>
                    <div class="stat-card-change @(Model.PendingRequestChangeRate > 0 ? "negative" : Model.PendingRequestChangeRate < 0 ? "positive" : "neutral")">
                        <i class="bi @(Model.PendingRequestChangeRate > 0 ? "bi-arrow-up-right" : Model.PendingRequestChangeRate < 0 ? "bi-arrow-down-right" : "bi-dash")"></i>
                        @Math.Abs(Model.PendingRequestChangeRate)% from last month
                    </div>
                </div>
                <div class="stat-card-icon revenue-icon">
                    <i class="bi bi-clipboard-check"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Task List Row -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card dashboard-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-clipboard-data me-2"></i>Tasks</h5>
                    <a asp-area="Staff" asp-page="/Tasks" class="btn btn-sm btn-outline-primary">Manage Tasks</a>
                </div>
                <div class="card-body p-0">
                    <ul class="task-list">
                        @if (Model.UpcomingTasks != null && Model.UpcomingTasks.Any())
                        {
                            @foreach (var task in Model.UpcomingTasks)
                            {
                                <li class="task-item">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="task-@task.Id" @(task.IsComplete ? "checked" : "")>
                                        <label class="form-check-label @(task.IsComplete ? "text-muted text-decoration-line-through" : "")" for="task-@task.Id">
                                            @task.Title
                                        </label>
                                    </div>
                                    @{
                                        string badgeClass = task.Priority switch
                                        {
                                            TaskPriority.Low => "bg-success",
                                            TaskPriority.Medium => "bg-info",
                                            TaskPriority.High => "bg-warning",
                                            TaskPriority.Urgent => "bg-danger",
                                            _ => "bg-secondary"
                                        };

                                        var dueDate = task.DueDate.Date;
                                        var today = DateTime.Now.Date;
                                        var daysDiff = (dueDate - today).TotalDays;
                                    }

                                    @if (daysDiff < 0)
                                    {
                                        <span class="badge bg-danger">Overdue</span>
                                    }
                                    else if (daysDiff == 0)
                                    {
                                        <span class="badge bg-warning">Due Today</span>
                                    }
                                    else
                                    {
                                        <span class="badge @badgeClass">@task.Priority</span>
                                    }
                                </li>
                            }
                        }
                        else
                        {
                            <li class="task-item text-center py-4">
                                <p class="mb-0 text-muted">No upcoming tasks</p>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities & Tasks Row -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card dashboard-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-activity me-2"></i>Recent Activities</h5>
                    <a href="#" class="btn btn-sm btn-outline-primary">View All</a>
                </div>
                <div class="card-body p-0">
                    <ul class="activity-list">
                        @if (Model.RecentActivities != null && Model.RecentActivities.Any())
                        {
                            @foreach (var activity in Model.RecentActivities)
                            {
                                <li class="activity-item">
                                    <div class="activity-icon @activity.IconClass">
                                        <i class="bi @activity.Icon"></i>
                                    </div>
                                    <div class="activity-content">
                                        <div class="activity-title">@activity.Title</div>
                                        <div class="activity-subtitle">@activity.SubTitle</div>
                                        <div class="activity-time">@activity.TimeDisplay</div>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="activity-item">
                                <div class="activity-content text-center py-4">
                                    <p class="text-muted">No recent activities found</p>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <!-- Modified: Adding Quick Access to Announcements Cards -->
        <div class="col-md-6">
            <div class="card dashboard-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-megaphone me-2"></i>Announcement Actions</h5>
                    <a asp-area="Staff" asp-page="/Announcement" class="btn btn-sm btn-outline-primary">Manage All</a>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <a asp-area="Staff" asp-page="/CreateAnnouncement" class="announcement-action-card">
                                <div class="action-icon bg-primary">
                                    <i class="bi bi-plus-circle"></i>
                                </div>
                                <div class="action-content">
                                    <h6>Create Announcement</h6>
                                    <p>Post a new announcement to the community</p>
                                </div>
                            </a>
                        </div>
                        <div class="col-md-6">
                            <a asp-area="Staff" asp-page="/Announcement" class="announcement-action-card">
                                <div class="action-icon bg-success">
                                    <i class="bi bi-list-ul"></i>
                                </div>
                                <div class="action-content">
                                    <h6>View Announcements</h6>
                                    <p>Manage existing announcements</p>
                                </div>
                            </a>
                        </div>
                        <div class="col-md-6">
                            <a asp-area="Staff" asp-page="/Calendar" class="announcement-action-card">
                                <div class="action-icon bg-info">
                                    <i class="bi bi-calendar-plus"></i>
                                </div>
                                <div class="action-content">
                                    <h6>Schedule Event</h6>
                                    <p>Add events to community calendar</p>
                                </div>
                            </a>
                        </div>
                        <div class="col-md-6">
                            <a asp-area="Staff" asp-page="/EventsCalendar" class="announcement-action-card">
                                <div class="action-icon bg-warning">
                                    <i class="bi bi-calendar-week"></i>
                                </div>
                                <div class="action-content">
                                    <h6>View Calendar</h6>
                                    <p>See all scheduled community events</p>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        --body-bg: #f9f9f9;
    }

    body {
        background-color: var(--body-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Dashboard container */
    .dashboard-container {
        margin-top: 5rem;
        padding-bottom: 2rem;
    }

    .dashboard-welcome {
        padding: 1.5rem 0;
        border-bottom: 1px solid rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .welcome-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .welcome-subtitle {
        color: var(--text-muted);
        font-size: 1.1rem;
    }

    /* Stats Cards */
    .stats-cards {
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        padding: 1.25rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 24px rgba(0,0,0,0.1);
        }

    .stat-card-content {
        z-index: 1;
    }

    .stat-card-title {
        font-size: 0.9rem;
        color: var(--text-muted);
        margin-bottom: 0.5rem;
        font-weight: 500;
    }

    .stat-card-value {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
    }

    .stat-card-change {
        font-size: 0.8rem;
        display: flex;
        align-items: center;
    }

        .stat-card-change.positive {
            color: var(--success-color);
        }

        .stat-card-change.negative {
            color: var(--danger-color);
        }

        .stat-card-change.neutral {
            color: var(--text-muted);
        }

    .stat-card-icon {
        font-size: 2rem;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 12px;
        color: white;
    }

    .user-icon {
        background-color: var(--primary-color);
    }

    .service-icon {
        background-color: var(--info-color);
    }

    .approval-icon {
        background-color: var(--warning-color);
    }

    .revenue-icon {
        background-color: var(--success-color);
    }

    /* Chart Cards */
    .chart-card {
        margin-bottom: 1.5rem;
    }

        .chart-card .card-header {
            background-color: white;
            border-bottom: 1px solid rgba(0,0,0,0.05);
            padding: 1rem 1.25rem;
        }

            .chart-card .card-header h5 {
                margin: 0;
                font-size: 1rem;
                font-weight: 600;
                color: var(--primary-color);
                display: flex;
                align-items: center;
            }

        .chart-card .dropdown-toggle {
            background: transparent;
            color: var(--text-muted);
            border: 1px solid rgba(0,0,0,0.1);
            font-size: 0.85rem;
        }

            .chart-card .dropdown-toggle:hover {
                background-color: var(--primary-lighter);
                color: var(--primary-color);
            }

    .chart-container {
        position: relative;
        height: 250px;
        overflow: hidden;
    }

        .chart-container canvas {
            max-width: 100%;
        }

    /* Activity List */
    .activity-list {
        list-style: none;
        padding: 0;
        margin: 0;
        max-height: 300px;
        overflow-y: auto;
        scrollbar-width: thin;
    }

    .activity-item {
        display: flex;
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: background-color 0.2s ease;
    }

        .activity-item:last-child {
            border-bottom: none;
        }

        .activity-item:hover {
            background-color: var(--primary-lighter);
        }

    .activity-icon {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        margin-right: 1rem;
        flex-shrink: 0;
    }

    .activity-content {
        flex: 1;
    }

    .activity-title {
        font-weight: 500;
        margin-bottom: 0.25rem;
        color: var(--text-dark);
    }

    .activity-subtitle {
        font-size: 0.85rem;
        color: var(--text-muted);
        margin-bottom: 0.25rem;
    }

    .activity-time {
        font-size: 0.75rem;
        color: var(--text-muted);
        opacity: 0.8;
    }

    /* Task List Styling */
    .task-list {
        list-style: none;
        padding: 0;
        margin: 0;
        max-height: 300px;
        overflow-y: auto;
        scrollbar-width: thin;
    }

    .task-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: background-color 0.2s ease;
    }

        .task-item:last-child {
            border-bottom: none;
        }

        .task-item:hover {
            background-color: var(--primary-lighter);
        }

        .task-item .form-check {
            margin: 0;
        }

        .task-item .form-check-label {
            cursor: pointer;
        }

        .task-item .form-check-input:checked + .form-check-label {
            text-decoration: line-through;
            color: var(--text-muted);
        }

    /* Dashboard cards */
    .dashboard-card {
        height: 100%;
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }

        .dashboard-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 24px rgba(0,0,0,0.1);
        }

        .dashboard-card .card-header {
            background-color: white;
            border-bottom: 1px solid rgba(0,0,0,0.05);
            padding: 1rem 1.25rem;
        }

            .dashboard-card .card-header h5 {
                margin: 0;
                font-size: 1rem;
                font-weight: 600;
                color: var(--primary-color);
                display: flex;
                align-items: center;
            }

    /* Profile menu */
    .profile-menu {
        position: relative;
    }

    .profile-link {
        color: white;
        text-decoration: none;
        display: flex;
        align-items: center;
    }

    .profile-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.15);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
        margin-right: 0.5rem;
        transition: all 0.3s ease;
    }

    .profile-dropdown {
        padding: 0.5rem 0;
        min-width: 240px;
    }

    .user-info {
        display: flex;
        flex-direction: column;
    }

    .user-name {
        font-weight: 600;
        color: var(--text-dark);
    }

    .user-role {
        font-size: 0.8rem;
        color: var(--text-muted);
    }

    .logout-item {
        color: #dc3545;
    }

    /* Buttons styling */
    .btn-primary, .btn-outline-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

        .btn-primary:hover, .btn-outline-primary:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
        }

    .btn-outline-primary {
        color: var(--primary-color);
        background-color: transparent;
    }

        .btn-outline-primary:hover {
            color: white;
        }

    /* Custom scrollbar styling */
    .activity-list::-webkit-scrollbar,
    .task-list::-webkit-scrollbar {
        width: 6px;
        height: 6px;
    }

    .activity-list::-webkit-scrollbar-track,
    .task-list::-webkit-scrollbar-track {
        background: rgba(0,0,0,0.02);
    }

    .activity-list::-webkit-scrollbar-thumb,
    .task-list::-webkit-scrollbar-thumb {
        background: rgba(0,0,0,0.1);
        border-radius: 4px;
    }

        .activity-list::-webkit-scrollbar-thumb:hover,
        .task-list::-webkit-scrollbar-thumb:hover {
            background: rgba(78, 110, 77, 0.3);
        }

    /* Announcement Action Cards */
    .announcement-action-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        display: flex;
        align-items: center;
        padding: 1.25rem;
        gap: 1rem;
        transition: all 0.3s ease;
        color: var(--text-dark);
        text-decoration: none;
        border: 1px solid rgba(0,0,0,0.05);
        height: 100%;
    }

        .announcement-action-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            border-color: var(--primary-color);
            color: var(--primary-color);
        }

    .action-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: white;
        flex-shrink: 0;
    }

    .action-content {
        flex: 1;
    }

        .action-content h6 {
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 0.25rem;
            transition: color 0.3s ease;
        }

        .action-content p {
            color: var(--text-muted);
            font-size: 0.85rem;
            margin-bottom: 0;
            transition: color 0.3s ease;
        }

    .announcement-action-card:hover .action-content h6 {
        color: var(--primary-color);
    }

    .announcement-action-card:hover .action-content p {
        color: var(--primary-dark);
    }
</style>

<script>
    // Initialize charts when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Set chart defaults to match theme
        Chart.defaults.color = '#6c757d';
        Chart.defaults.font.family = "'Segoe UI', 'Helvetica Neue', 'Arial', sans-serif";

        // Activity Trends Chart
        const activityTrendsCtx = document.getElementById('activityTrendsChart');
        if (activityTrendsCtx) {
            const activityData = {
                labels: @Json.Serialize(Model.ChartData.Labels),
                datasets: [
                    {
                        label: 'Service Requests',
                        data: @Json.Serialize(Model.ChartData.ServiceRequests),
                        borderColor: '#4e6e4d',
                        backgroundColor: 'rgba(78, 110, 77, 0.1)',
                        tension: 0.3,
                        fill: true
                    },
                    {
                        label: 'Completed Tasks',
                        data: @Json.Serialize(Model.ChartData.CompletedTasks),
                        borderColor: '#17a2b8',
                        backgroundColor: 'rgba(23, 162, 184, 0.1)',
                        tension: 0.3,
                        fill: true
                    }
                ]
            };

            new Chart(activityTrendsCtx, {
                type: 'line',
                data: activityData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                            align: 'end',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    }
                }
            });
        }

        // Task Status Chart
        const taskStatusCtx = document.getElementById('taskStatusChart');
        if (taskStatusCtx) {
            const taskData = {
                labels: @Json.Serialize(Model.TaskStatusChartData.Labels),
                datasets: [{
                    data: @Json.Serialize(Model.TaskStatusChartData.Values),
                    backgroundColor: ['#28a745', '#17a2b8', '#ffc107', '#dc3545'],
                    borderWidth: 0
                }]
            };

            new Chart(taskStatusCtx, {
                type: 'doughnut',
                data: taskData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                font: {
                                    size: 11
                                }
                            }
                        }
                    },
                    cutout: '65%'
                }
            });
        }

        // Handle time range dropdown for activity chart
        document.querySelectorAll('[data-range]').forEach(item => {
            item.addEventListener('click', event => {
                event.preventDefault();
                const days = event.target.dataset.range;
                document.getElementById('timeRangeDropdown').textContent = event.target.textContent;
                // Here you would refresh the page with a new query parameter
                window.location.href = window.location.pathname + '?range=' + days;
            });
        });

        // Keep the existing task checkboxes event handlers
    });

        // Handle task checkboxes
        const checkboxes = document.querySelectorAll('.task-item .form-check-input');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const label = this.nextElementSibling;
                if (this.checked) {
                    label.classList.add('text-muted');
                    label.style.textDecoration = 'line-through';
                } else {
                    label.classList.remove('text-muted');
                    label.style.textDecoration = 'none';
                }
            });
        });
    });
</script>