@page
@using HomeOwners.Models
@model HomeOwners.Areas.Staff.Pages.TasksModel
@{
    ViewData["Title"] = "Staff Tasks";
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<link rel="stylesheet" href="~/css/nav.css" asp-append-version="true" />

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" asp-area="Staff" asp-page="/Dashboard">
            <span class="brand-text">STAFF DASHBOARD</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" asp-area="Staff" asp-page="/Dashboard">
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="Staff" asp-page="/Users">
                        Users
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" asp-area="Staff" asp-page="/Tasks">
                        Tasks
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Services">Manage Services</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ServiceRequests">Service Request</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ServicePersonnel">Service Personnel</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Facilities">Manage Facilities</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/BookingRequests">Booking Requests</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Announcement">Manage Announcement</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Calendar">Manage Events</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ManageForum">Manage Forum</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ManagePolls">Manage Polls</a></li>
                    </ul>
                </li>
            </ul>

            <!-- Profile Menu -->
            <div class="nav-items-right">
                <div class="nav-item dropdown profile-menu">
                    <a class="profile-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="profile-avatar">
                            <i class="bi bi-person-fill"></i>
                        </div>
                    </a>
                    <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                        <li class="dropdown-header">
                            <div class="user-info">
                                <span class="user-name">@(User.Identity?.Name ?? "Admin")</span>
                                <span class="user-role">Staff Personnel</span>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" asp-area="Staff" asp-page="/Profile">
                                <i class="bi bi-person-gear"></i> Profile Settings
                            </a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item logout-item">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>

<div class="container dashboard-container">
    <!-- Page Header -->
    <div class="row align-items-center mb-4">
        <div class="col">
            <h1 class="page-title">
                <i class="bi bi-list-check me-2"></i>Tasks Management
            </h1>
            <p class="text-muted">Create, manage, and track tasks for staff members</p>
        </div>
        <div class="col-auto">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createTaskModal">
                <i class="bi bi-plus-circle me-2"></i>New Task
            </button>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        var statusClass = Model.StatusType == "Success" ? "success" : "danger";
        var statusIcon = Model.StatusType == "Success" ? "check-circle" : "exclamation-triangle";
        <div class="alert alert-@statusClass alert-dismissible fade show" role="alert">
            <i class="bi bi-@statusIcon me-2"></i> @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Tasks Filter Tabs -->
    <ul class="nav nav-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link @(Request.Query["filter"] != "completed" && Request.Query["filter"] != "active" ? "active" : "")"
               asp-page="./Tasks">All Tasks</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Request.Query["filter"] == "active" ? "active" : "")"
               asp-page="./Tasks" asp-route-filter="active">Active Tasks</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Request.Query["filter"] == "completed" ? "active" : "")"
               asp-page="./Tasks" asp-route-filter="completed">Completed Tasks</a>
        </li>
    </ul>

    <!-- Active Tasks -->
    <div class="card mb-4">
        <div class="card-header bg-white">
            <h5 class="card-title mb-0">
                <i class="bi bi-hourglass-split me-2"></i>Active Tasks
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Tasks.Any(t => !t.IsComplete))
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 5%;" class="text-center">Status</th>
                                <th style="width: 40%;">Task</th>
                                <th style="width: 15%;">Priority</th>
                                <th style="width: 15%;">Due Date</th>
                                <th style="width: 25%;" class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Model.Tasks.Where(t => !t.IsComplete).OrderByDescending(t => t.Priority).ThenBy(t => t.DueDate))
                            {
                                <tr>
                                    <td class="text-center">
                                        <form method="post" asp-page-handler="ToggleCompletion" asp-route-id="@task.Id">
                                            <div class="form-check d-flex justify-content-center">
                                                <input class="form-check-input task-checkbox"
                                                       type="checkbox"
                                                       id="task-@task.Id"
                                                @(task.IsComplete ? "checked" : "")
                                                       onchange="this.form.submit()">
                                            </div>
                                        </form>
                                    </td>
                                    <td>
                                        <span class="fw-medium">@task.Title</span>
                                        @if (!string.IsNullOrEmpty(task.Description))
                                        {
                                            <p class="text-muted small mb-0 text-truncate">@task.Description</p>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            string badgeClass = task.Priority switch
                                            {
                                                TaskPriority.Low => "bg-success",
                                                TaskPriority.Medium => "bg-info",
                                                TaskPriority.High => "bg-warning",
                                                TaskPriority.Urgent => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @badgeClass">@task.Priority</span>
                                    </td>
                                    <td>
                                        @{
                                            var dueDate = task.DueDate.Date;
                                            var today = DateTime.Now.Date;
                                            var daysDiff = (dueDate - today).TotalDays;
                                            string dateClass = daysDiff < 0 ? "text-danger" :
                                            daysDiff == 0 ? "text-warning" :
                                            daysDiff <= 2 ? "text-info" : "";
                                        }
                                        <span class="@dateClass">@task.DueDate.ToString("MMM d, yyyy")</span>
                                        @if (daysDiff < 0)
                                        {
                                            <span class="badge bg-danger ms-1">Overdue</span>
                                        }
                                        else if (daysDiff == 0)
                                        {
                                            <span class="badge bg-warning ms-1">Today</span>
                                        }
                                    </td>
                                    <td class="text-end">
                                        <button type="button" class="btn btn-sm btn-outline-primary me-1 edit-task-btn"
                                                data-id="@task.Id"
                                                data-title="@task.Title"
                                                data-description="@task.Description"
                                                data-priority="@((int)task.Priority)"
                                                data-due-date="@task.DueDate.ToString("yyyy-MM-dd")"
                                                data-bs-toggle="modal" data-bs-target="#editTaskModal">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <form method="post" asp-page-handler="Delete" asp-route-id="@task.Id" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-outline-danger"
                                                    onclick="return confirm('Are you sure you want to delete this task?')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-check-circle text-success" style="font-size: 3rem;"></i>
                    <h4 class="mt-3">No active tasks</h4>
                    <p class="text-muted">All caught up! Create a new task to get started.</p>
                    <button type="button" class="btn btn-primary mt-2" data-bs-toggle="modal" data-bs-target="#createTaskModal">
                        <i class="bi bi-plus-circle me-2"></i>Create Task
                    </button>
                </div>
            }
        </div>
    </div>

    <!-- Completed Tasks -->
    @if (Model.CompletedTasks.Any() && Request.Query["filter"] != "active")
    {
        <div class="card">
            <div class="card-header bg-white d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="bi bi-check2-all me-2"></i>Completed Tasks
                </h5>
                <button class="btn btn-sm btn-link" type="button"
                        data-bs-toggle="collapse" data-bs-target="#completedTasksCollapse"
                        aria-expanded="false" aria-controls="completedTasksCollapse">
                    <i class="bi bi-chevron-down"></i>
                </button>
            </div>
            <div class="collapse" id="completedTasksCollapse">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th style="width: 5%;" class="text-center">Status</th>
                                    <th style="width: 40%;">Task</th>
                                    <th style="width: 15%;">Priority</th>
                                    <th style="width: 15%;">Completed On</th>
                                    <th style="width: 25%;" class="text-end">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var task in Model.CompletedTasks)
                                {
                                    <tr class="table-light">
                                        <td class="text-center">
                                            <form method="post" asp-page-handler="ToggleCompletion" asp-route-id="@task.Id">
                                                <div class="form-check d-flex justify-content-center">
                                                    <input class="form-check-input task-checkbox"
                                                           type="checkbox"
                                                           id="task-@task.Id"
                                                    @(task.IsComplete ? "checked" : "")
                                                           onchange="this.form.submit()">
                                                </div>
                                            </form>
                                        </td>
                                        <td>
                                            <span class="fw-medium text-decoration-line-through text-muted">@task.Title</span>
                                            @if (!string.IsNullOrEmpty(task.Description))
                                            {
                                                <p class="text-muted small mb-0 text-truncate">@task.Description</p>
                                            }
                                        </td>
                                        <td>
                                            @{
                                                string badgeClass = task.Priority switch
                                                {
                                                    TaskPriority.Low => "bg-success",
                                                    TaskPriority.Medium => "bg-info",
                                                    TaskPriority.High => "bg-warning",
                                                    TaskPriority.Urgent => "bg-danger",
                                                    _ => "bg-secondary"
                                                };
                                            }
                                            <span class="badge @badgeClass bg-opacity-50">@task.Priority</span>
                                        </td>
                                        <td>
                                            @(task.CompletedDate?.ToString("MMM d, yyyy") ?? "N/A")
                                        </td>
                                        <td class="text-end">
                                            <form method="post" asp-page-handler="Delete" asp-route-id="@task.Id" class="d-inline">
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        onclick="return confirm('Are you sure you want to delete this task?')">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Create Task Modal -->
<div class="modal fade" id="createTaskModal" tabindex="-1" aria-labelledby="createTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form method="post" asp-page-handler="CreateTaskAsync">
                <div class="modal-header">
                    <h5 class="modal-title" id="createTaskModalLabel">Create New Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Title" class="form-label">Title <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="Title" name="NewTask.Title" required
                               maxlength="100" placeholder="Enter task title">
                    </div>
                    <div class="mb-3">
                        <label for="Description" class="form-label">Description</label>
                        <textarea class="form-control" id="Description" name="NewTask.Description" rows="3"
                                  maxlength="500" placeholder="Enter task description"></textarea>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label for="Priority" class="form-label">Priority <span class="text-danger">*</span></label>
                            <select class="form-select" id="Priority" name="NewTask.Priority" required>
                                <option value="0">Low</option>
                                <option value="1">Medium</option>
                                <option value="2" selected>High</option>
                                <option value="3">Urgent</option>
                            </select>
                        </div>
                        <div class="col">
                            <label for="DueDate" class="form-label">Due Date <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="DueDate" name="NewTask.DueDate" required
                                   value="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Task</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Task Modal -->
<div class="modal fade" id="editTaskModal" tabindex="-1" aria-labelledby="editTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="editTaskForm" method="post" asp-page-handler="EditTask">
                <input type="hidden" id="editTaskId" name="id">
                <div class="modal-header">
                    <h5 class="modal-title" id="editTaskModalLabel">Edit Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editTitle" class="form-label">Title <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="editTitle" name="Task.Title" required
                               maxlength="100">
                    </div>
                    <div class="mb-3">
                        <label for="editDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editDescription" name="Task.Description" rows="3"
                                  maxlength="500"></textarea>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label for="editPriority" class="form-label">Priority <span class="text-danger">*</span></label>
                            <select class="form-select" id="editPriority" name="Task.Priority" required>
                                <option value="0">Low</option>
                                <option value="1">Medium</option>
                                <option value="2">High</option>
                                <option value="3">Urgent</option>
                            </select>
                        </div>
                        <div class="col">
                            <label for="editDueDate" class="form-label">Due Date <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="editDueDate" name="Task.DueDate" required>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        --body-bg: #f9f9f9;
    }

    body {
        background-color: var(--body-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Dashboard container */
    .dashboard-container {
        margin-top: 5rem;
        padding-bottom: 2rem;
    }

    /* Page title */
    .page-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    /* Card customization */
    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        margin-bottom: 1.5rem;
    }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 1rem 1.25rem;
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary-color);
        margin: 0;
    }

    /* Nav tabs customization */
    .nav-tabs {
        border-bottom: 1px solid rgba(0,0,0,0.1);
    }

    .nav-tabs .nav-link {
        border: none;
        color: var(--text-muted);
        padding: 0.75rem 1rem;
        font-weight: 500;
    }

    .nav-tabs .nav-link:hover {
        border: none;
        color: var(--primary-color);
    }

    .nav-tabs .nav-link.active {
        border: none;
        border-bottom: 2px solid var(--primary-color);
        color: var(--primary-color);
        font-weight: 600;
    }

    /* Table customization */
    .table-hover tbody tr:hover {
        background-color: var(--primary-lighter);
    }

    .task-checkbox {
        cursor: pointer;
        width: 1.2em;
        height: 1.2em;
    }

    /* Badges */
    .badge {
        padding: 0.35em 0.65em;
        font-weight: 500;
    }

    /* Profile menu */
    .profile-menu {
        position: relative;
    }

    .profile-link {
        color: white;
        text-decoration: none;
        display: flex;
        align-items: center;
    }

    .profile-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.15);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
        margin-right: 0.5rem;
        transition: all 0.3s ease;
    }

    .profile-dropdown {
        padding: 0.5rem 0;
        min-width: 240px;
    }

    .user-info {
        display: flex;
        flex-direction: column;
    }

    .user-name {
        font-weight: 600;
        color: var(--text-dark);
    }

    .user-role {
        font-size: 0.8rem;
        color: var(--text-muted);
    }

    .logout-item {
        color: #dc3545;
    }

    /* Buttons */
    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-primary:hover, .btn-primary:active, .btn-primary:focus {
        background-color: var(--primary-dark) !important;
        border-color: var(--primary-dark) !important;
    }

    .btn-outline-primary {
        color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-outline-primary:hover {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Edit task modal population
        const editButtons = document.querySelectorAll('.edit-task-btn');
        editButtons.forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const title = this.getAttribute('data-title');
                const description = this.getAttribute('data-description');
                const priority = this.getAttribute('data-priority');
                const dueDate = this.getAttribute('data-due-date');

                document.getElementById('editTaskId').value = id;
                document.getElementById('editTitle').value = title;
                document.getElementById('editDescription').value = description || '';
                document.getElementById('editPriority').value = priority;
                document.getElementById('editDueDate').value = dueDate;
            });
        });

        // Add form validation for both modals
        const validateForm = function(form) {
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return false;
            }
            return true;
        };

        // Modal form submission handlers
        const createForm = document.querySelector('#createTaskModal form');
        createForm.addEventListener('submit', function(event) {
            if (!validateForm(this)) {
                event.preventDefault();
                event.stopPropagation();
            }
        });

        const editForm = document.querySelector('#editTaskModal form');
        editForm.addEventListener('submit', function(event) {
            if (!validateForm(this)) {
                event.preventDefault();
                event.stopPropagation();
            }
        });

        // Automatically open collapsed sections if they have content and we're viewing a filtered view
        const urlParams = new URLSearchParams(window.location.search);
        const filter = urlParams.get('filter');
        if (filter === 'completed') {
            const completedCollapse = document.getElementById('completedTasksCollapse');
            if (completedCollapse) {
                completedCollapse.classList.add('show');
            }
        }
    });
</script>