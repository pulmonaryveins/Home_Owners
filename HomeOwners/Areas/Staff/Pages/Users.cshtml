@page
@model HomeOwners.Areas.Staff.Pages.UsersModel
@{
    ViewData["Title"] = "User Management";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="~/css/nav.css" asp-append-version="true" />

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" asp-area="Staff" asp-page="/Dashboard">
            <span class="brand-text">STAFF DASHBOARD</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" asp-area="Staff" asp-page="/Dashboard">
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" asp-area="Staff" asp-page="/Users">
                        Users
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Services">Manage Services</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ServiceRequests">Service Request</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ServicePersonnel">Service Personnel</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Facilities">Manage Facilities</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/BookingRequests">Booking Requests</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle acitve" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Announcement">Manage Announcement</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/Calendar">Manage Events</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ManageForum">Manage Forum</a></li>
                        <li><a class="dropdown-item" asp-area="Staff" asp-page="/ManagePolls">Manage Polls</a></li>
                    </ul>
                </li>
            </ul>

            <!-- Profile Menu -->
            <div class="nav-items-right">
                <div class="nav-item dropdown profile-menu">
                    <a class="profile-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="profile-avatar">
                            <i class="bi bi-person-fill"></i>
                        </div>
                    </a>
                    <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                        <li class="dropdown-header">
                            <div class="user-info">
                                <span class="user-name">@(User.Identity?.Name ?? "Admin")</span>
                                <span class="user-role">Staff Personnel</span>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" asp-area="Admin" asp-page="/Profile">
                                <i class="bi bi-person-gear"></i> Profile Settings
                            </a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item logout-item">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>

<div class="container mt-5 pt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title">
                <i class="bi bi-people-fill me-2"></i>
                Home Owner Management
            </h1>
            <p class="text-muted mb-0 mt-1">View and approve home owner accounts</p>
        </div>
        <div class="user-summary">
            <div class="user-count-card">
                <i class="bi bi-house-door-fill"></i>
                <div class="count-content">
                    <div class="count">@Model.TotalHomeOwnerCount</div>
                    <div class="label">Home Owners</div>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["StatusMessage"] != null)
    {
        var statusType = TempData["StatusType"]?.ToString() == "Success" ? "success" : "danger";
        <div class="alert alert-@statusType alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi @(statusType == "success" ? "bi-check-circle" : "bi-exclamation-triangle") me-2"></i>
                <span>@TempData["StatusMessage"]</span>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Pending Approval Section -->
    @if (Model.PendingHomeOwnerUsers.Any())
    {
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-warning-subtle py-3">
                <h3 class="card-title mb-0 d-flex align-items-center">
                    <i class="bi bi-clock-history me-2"></i>
                    Pending Approval Requests
                    <span class="badge bg-warning ms-2">@Model.PendingHomeOwnerUsers.Count</span>
                </h3>
            </div>
            <div class="table-responsive">
                <table class="table table-hover user-table mb-0">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Full Name</th>
                            <th>Contact</th>
                            <th>House Number</th>
                            <th>Registration Date</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.PendingHomeOwnerUsers)
                        {
                            <tr class="align-middle">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="user-avatar rounded-circle d-flex align-items-center justify-content-center me-2">
                                            <i class="bi bi-person"></i>
                                        </div>
                                        <div>
                                            <div class="fw-medium">@user.UserName</div>
                                            <div class="small text-muted">@user.Email</div>
                                        </div>
                                    </div>
                                </td>
                                <td>@user.FullName</td>
                                <td>@user.PhoneNumber</td>
                                <td>@user.HouseNumber</td>
                                <td>@user.CreatedDate.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <div class="action-buttons">
                                        <form method="post" asp-page-handler="ApproveUser" asp-route-userId="@user.Id" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-success action-btn" data-bs-toggle="tooltip"
                                                    title="Approve User" onclick="return confirm('Are you sure you want to approve this user?')">
                                                <i class="bi bi-check-lg"></i> Approve
                                            </button>
                                        </form>
                                        <button type="button" class="btn btn-sm btn-danger action-btn" data-bs-toggle="modal"
                                                data-bs-target="#rejectModal" data-userid="@user.Id">
                                            <i class="bi bi-x-lg"></i> Reject
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-header bg-white py-3">
            <div class="row g-3 align-items-center">
                <div class="col-md-6">
                    <form method="get" class="search-form">
                        <div class="input-group">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="bi bi-search text-muted"></i>
                            </span>
                            <input type="text"
                                   name="searchString"
                                   value="@Model.CurrentFilter"
                                   class="form-control border-start-0"
                                   placeholder="Search by name or email..."
                                   aria-label="Search users" />
                            <button type="submit" class="btn btn-primary">
                                <span class="d-none d-md-inline">Search</span>
                            </button>
                        </div>
                    </form>
                </div>
                <div class="col-md-6 d-flex justify-content-md-end gap-2">
                    <div class="dropdown">
                        <button type="button"
                                class="btn btn-outline-primary dropdown-toggle"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <i class="bi bi-filter"></i>
                            <span class="ms-1">@(string.IsNullOrEmpty(Model.RoleFilter) ? "All Users" : Model.RoleFilter)</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" asp-page="./Users" asp-route-roleFilter=""><i class="bi bi-people"></i> All Users</a></li>
                            <li><a class="dropdown-item" asp-page="./Users" asp-route-roleFilter="HomeOwner"><i class="bi bi-house-door"></i> Home Owners</a></li>
                        </ul>
                    </div>

                    <div class="dropdown">
                        <button type="button"
                                class="btn btn-outline-secondary dropdown-toggle"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <i class="bi bi-sort-alpha-down"></i>
                            <span class="ms-1 d-none d-md-inline">Sort by</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a class="dropdown-item @(Model.SortField == "name" && Model.SortDirection == "asc" ? "active" : "")" asp-page="./Users" asp-route-sortOrder="" asp-route-currentFilter="@Model.CurrentFilter" asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-sort-alpha-down"></i> Name (A-Z)
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item @(Model.SortField == "name" && Model.SortDirection == "desc" ? "active" : "")" asp-page="./Users" asp-route-sortOrder="name_desc" asp-route-currentFilter="@Model.CurrentFilter" asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-sort-alpha-up"></i> Name (Z-A)
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item @(Model.SortField == "email" && Model.SortDirection == "asc" ? "active" : "")" asp-page="./Users" asp-route-sortOrder="email" asp-route-currentFilter="@Model.CurrentFilter" asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-sort-alpha-down"></i> Email (A-Z)
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item @(Model.SortField == "email" && Model.SortDirection == "desc" ? "active" : "")" asp-page="./Users" asp-route-sortOrder="email_desc" asp-route-currentFilter="@Model.CurrentFilter" asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-sort-alpha-up"></i> Email (Z-A)
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item @(Model.SortField == "date" && Model.SortDirection == "asc" ? "active" : "")" asp-page="./Users" asp-route-sortOrder="date" asp-route-currentFilter="@Model.CurrentFilter" asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-calendar-date"></i> Newest First
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item @(Model.SortField == "date" && Model.SortDirection == "desc" ? "active" : "")" asp-page="./Users" asp-route-sortOrder="date_desc" asp-route-currentFilter="@Model.CurrentFilter" asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-calendar-date"></i> Oldest First
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover user-table mb-0">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Full Name</th>
                        <th>Contact</th>
                        <th>House Number</th>
                        <th>Roles</th>
                        <th>Status</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Users != null && Model.Users.Any())
                    {
                        @foreach (var user in Model.Users)
                        {
                            <tr class="align-middle">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="user-avatar rounded-circle d-flex align-items-center justify-content-center me-2">
                                            <i class="bi bi-person"></i>
                                        </div>
                                        <div>
                                            <div class="fw-medium">@user.UserName</div>
                                            <div class="small text-muted">@user.Email</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @if (user.Roles.Contains("HomeOwner") && Model.HomeOwnerDetails.ContainsKey(user.Id))
                                    {
                                        @Model.HomeOwnerDetails[user.Id].FullName
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @if (user.Roles.Contains("HomeOwner") && Model.HomeOwnerDetails.ContainsKey(user.Id))
                                    {
                                        @Model.HomeOwnerDetails[user.Id].PhoneNumber
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @if (user.Roles.Contains("HomeOwner") && Model.HomeOwnerDetails.ContainsKey(user.Id))
                                    {
                                        @Model.HomeOwnerDetails[user.Id].HouseNumber
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @foreach (var role in user.Roles)
                                    {
                                        <span class="badge rounded-pill
                                              @(role == "Admin" ? "admin-badge" :
                                                 role == "Staff" ? "staff-badge" :
                                                 role == "HomeOwner" ? "homeowner-badge" : "user-badge")">
                                            @role
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (user.Roles.Contains("HomeOwner") && Model.HomeOwnerDetails.ContainsKey(user.Id))
                                    {
                                        string status = Model.HomeOwnerDetails[user.Id].AccountStatus ?? "approved";
                                        <span class="status-badge @(status == "pending" ? "pending" :
                                                                  status == "approved" ? "active" : "inactive")">
                                            <i class="bi @(status == "pending" ? "bi-hourglass-split" : 
                                                        status == "approved" ? "bi-check-circle" : "bi-x-circle") me-1"></i>
                                            @status
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        @if (user.Roles.Contains("HomeOwner") && Model.HomeOwnerDetails.ContainsKey(user.Id) &&
                                        (Model.HomeOwnerDetails[user.Id].AccountStatus == "approved" || Model.HomeOwnerDetails[user.Id].AccountStatus == "rejected"))
                                        {
                                            @if (Model.HomeOwnerDetails[user.Id].AccountStatus == "approved")
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger action-btn" data-bs-toggle="modal"
                                                        data-bs-target="#rejectModal" data-userid="@user.Id" title="Reject User">
                                                    <i class="bi bi-x-lg"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <form method="post" asp-page-handler="ApproveUser" asp-route-userId="@user.Id" class="d-inline">
                                                    <button type="submit" class="btn btn-sm btn-outline-success action-btn" data-bs-toggle="tooltip"
                                                            title="Approve User" onclick="return confirm('Are you sure you want to approve this user?')">
                                                        <i class="bi bi-check-lg"></i>
                                                    </button>
                                                </form>
                                            }
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center py-4">
                                <div class="empty-state">
                                    <i class="bi bi-search fs-1 text-muted"></i>
                                    <h5 class="mt-3">No users found</h5>
                                    <p class="text-muted mb-3">@(string.IsNullOrEmpty(Model.CurrentFilter) ? "No users match your filter criteria" : "No users match your search criteria")</p>
                                    <a asp-page="./Users" class="btn btn-outline-primary">
                                        <i class="bi bi-arrow-counterclockwise me-2"></i>Clear Filters
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.Users != null && Model.Users.Any())
        {
            <div class="card-footer bg-white border-0 py-3">
                <div class="d-flex justify-content-between align-items-center">
                    <small class="text-muted">
                        Showing @((Model.Users.PageIndex - 1) * Model.Users.PageSize + 1) -
                        @(Math.Min(Model.Users.PageIndex * Model.Users.PageSize, Model.Users.TotalCount))
                        of @Model.Users.TotalCount users
                    </small>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            @{
                                var prevDisabled = !Model.Users.HasPreviousPage ? "disabled" : "";
                                var nextDisabled = !Model.Users.HasNextPage ? "disabled" : "";
                            }
                            <li class="page-item @prevDisabled">
                                <a class="page-link" asp-page="./Users"
                                   asp-route-pageIndex="1"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-chevron-double-left"></i>
                                </a>
                            </li>
                            <li class="page-item @prevDisabled">
                                <a class="page-link" asp-page="./Users"
                                   asp-route-pageIndex="@(Model.Users.PageIndex - 1)"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>

                            @for (var i = Math.Max(1, Model.Users.PageIndex - 2);
                           i <= Math.Min(Model.Users.TotalPages, Model.Users.PageIndex + 2); i++)
                            {
                                <li class="page-item @(i == Model.Users.PageIndex ? "active" : "")">
                                    <a class="page-link" asp-page="./Users"
                                       asp-route-pageIndex="@i"
                                       asp-route-currentFilter="@Model.CurrentFilter"
                                       asp-route-sortOrder="@Model.CurrentSort"
                                       asp-route-roleFilter="@Model.RoleFilter">@i</a>
                                </li>
                            }

                            <li class="page-item @nextDisabled">
                                <a class="page-link" asp-page="./Users"
                                   asp-route-pageIndex="@(Model.Users.PageIndex + 1)"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                            <li class="page-item @nextDisabled">
                                <a class="page-link" asp-page="./Users"
                                   asp-route-pageIndex="@Model.Users.TotalPages"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-roleFilter="@Model.RoleFilter">
                                    <i class="bi bi-chevron-double-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        }
    </div>
</div>

<!-- Rejection Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i>Reject User Account
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="RejectUser">
                <div class="modal-body">
                    <input type="hidden" id="rejectUserId" name="userId" />
                    <div class="mb-3">
                        <label for="rejectionReason" class="form-label">Reason for Rejection</label>
                        <textarea class="form-control" id="rejectionReason" name="rejectionReason" rows="3"
                                  placeholder="Please provide a reason for rejecting this account..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-x-lg me-2"></i>Reject Account
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
    }

    /* Base styling */
    body {
        background-color: #f5f7f9;
    }

    /* Navbar styling */
    .navbar {
        background-color: var(--primary-color) !important;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        padding: 0.75rem 0;
        transition: all 0.3s ease;
    }

    .navbar-brand {
        font-weight: 700;
        color: white !important;
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    .brand-text {
        background: linear-gradient(45deg, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .navbar-nav {
        gap: 0.5rem;
    }

    .navbar-nav .nav-link {
        color: var(--text-light) !important;
        font-weight: 500;
        font-size: 0.95rem;
        padding: 0.5rem 1rem !important;
        border-radius: 4px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
    }

    .navbar-nav .nav-link:hover,
    .navbar-nav .nav-link.active {
        background-color: rgba(255, 255, 255, 0.15);
        transform: translateY(-1px);
    }

    .profile-menu .nav-link {
        padding: 0.5rem !important;
        color: white !important;
        transition: all 0.3s ease;
        border-radius: 4px;
    }

    .profile-menu .nav-link:hover {
        background-color: rgba(255, 255, 255, 0.15);
    }

    /* Dropdown styling */
    .dropdown-menu {
        border: none;
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        padding: 0.5rem;
        min-width: 220px;
        margin-top: 0.5rem;
    }

    .dropdown-header {
        color: var(--text-muted);
        font-weight: 600;
        padding: 0.5rem 1rem;
    }

    .dropdown-item {
        padding: 0.6rem 1rem;
        color: var(--text-dark);
        border-radius: 4px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

    .dropdown-item:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
    }

    .dropdown-item i {
        font-size: 1.1rem;
    }

    .dropdown-item.active {
        background-color: var(--primary-color);
        color: white;
    }

    .dropdown-item:active {
        background-color: var(--primary-color);
    }

    /* Page header styling */
    .page-title {
        font-weight: 600;
        color: var(--primary-color);
        font-size: 1.75rem;
        margin-bottom: 0;
        display: flex;
        align-items: center;
    }

    /* Card styling */
    .card {
        border: none;
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .card-header {
        background-color: white;
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    /* User count card */
    .user-count-card {
        background-color: var(--primary-color);
        color: white;
        border-radius: 10px;
        padding: 0.85rem 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-count-card i {
        font-size: 1.8rem;
    }

    .count-content .count {
        font-size: 1.4rem;
        font-weight: 600;
        line-height: 1.2;
    }

    .count-content .label {
        font-size: 0.85rem;
        opacity: 0.8;
    }

    /* Search form styling */
    .search-form .form-control {
        border-right: 0;
        padding: 0.6rem 0.75rem;
    }

    .search-form .btn {
        border-left: 0;
        padding-left: 1rem;
        padding-right: 1rem;
    }

    .search-form .form-control:focus {
        box-shadow: none;
        border-color: var(--primary-color);
    }

    .search-form .input-group-text {
        background-color: white;
        color: var(--text-muted);
        border-right: none;
    }

    /* Table styling */
    .user-table {
        margin: 0;
    }

    .user-table thead th {
        background-color: #f9fafb;
        color: #4a5568;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 0.75rem 1rem;
    }

    .user-table td {
        padding: 0.85rem 1rem;
        vertical-align: middle;
    }

    .user-table tr {
        transition: background-color 0.15s ease;
    }

    .user-table tr:hover {
        background-color: var(--primary-lighter);
    }

    /* Avatar styling */
    .user-avatar {
        width: 36px;
        height: 36px;
        background-color: var(--primary-light);
        color: var(--primary-color);
        font-size: 1.2rem;
    }

    /* Status badges */
    .status-badge {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-badge.active {
        background-color: rgba(72, 187, 120, 0.1);
        color: #48bb78;
    }

    .status-badge.inactive {
        background-color: rgba(229, 62, 62, 0.1);
        color: #e53e3e;
    }

    .status-badge.pending {
        background-color: rgba(255, 193, 7, 0.1);
        color: #ffc107;
    }

    /* Role badges */
    .admin-badge {
        background-color: rgba(220, 53, 69, 0.1);
        color: #dc3545;
    }

    .staff-badge {
        background-color: rgba(255, 193, 7, 0.1);
        color: #ffc107;
    }

    .homeowner-badge {
        background-color: rgba(23, 162, 184, 0.1);
        color: #17a2b8;
    }

    .user-badge {
        background-color: rgba(108, 117, 125, 0.1);
        color: #6c757d;
    }

    /* Action buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
    }

    .action-btn {
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        transition: all 0.2s ease;
    }

    .action-btn:hover {
        transform: translateY(-2px);
    }

    /* Pagination styling */
    .pagination {
        gap: 0.25rem;
    }

    .page-link {
        border-radius: 0.25rem;
        padding: 0.375rem 0.75rem;
        color: var(--primary-color);
        border: 1px solid var(--primary-light);
        transition: all 0.2s ease;
    }

    .page-item.active .page-link {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .page-link:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
        border-color: var(--primary-light);
    }

    .page-item.disabled .page-link {
        color: var(--text-muted);
        background-color: transparent;
        border-color: var(--primary-lighter);
    }

    /* Button styling */
    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        padding: 0.6rem 1.2rem;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .btn-primary:hover {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(78, 110, 77, 0.3);
    }

    .btn-outline-primary {
        color: var(--primary-color);
        border-color: var(--primary-color);
        transition: all 0.3s ease;
    }

    .btn-outline-primary:hover {
        background-color: rgba(78, 110, 77, 0.1);
        color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-outline-secondary {
        color: var(--text-muted);
        border-color: #ced4da;
        transition: all 0.3s ease;
    }

    .btn-outline-secondary:hover {
        background-color: #f8f9fa;
        color: var(--primary-color);
        border-color: var(--primary-color);
    }

    /* Alert styling */
    .alert {
        border-radius: 8px;
        border-left: 4px solid;
    }

    .alert-danger {
        border-left-color: #dc3545;
    }

    .alert-success {
        border-left-color: #28a745;
    }

    /* Empty state styling */
    .empty-state {
        padding: 2rem 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        color: var(--text-muted);
    }

    /* Warning subtle background */
    .bg-warning-subtle {
        background-color: #fff8e1;
    }

    /* Improve navbar toggler */
    .navbar-toggler {
        border: none;
        padding: 0.5rem;
    }

    .navbar-toggler:focus {
        box-shadow: none;
    }

    .navbar-toggler i {
        font-size: 1.5rem;
    }

    /* Card shadow consistency */
    .card.shadow-sm {
        box-shadow: 0 4px 15px rgba(0,0,0,0.08) !important;
    }
</style>

<script>
    // Initialize tooltips
    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Handle passing userId to rejection modal
        var rejectModal = document.getElementById('rejectModal');
        if (rejectModal) {
            rejectModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var userId = button.getAttribute('data-userid');
                var modalInput = document.getElementById('rejectUserId');
                modalInput.value = userId;
            });
        }
    });
</script>