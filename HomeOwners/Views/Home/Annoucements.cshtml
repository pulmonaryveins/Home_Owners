@model List<HomeOwners.Models.Announcement>
@{
    ViewData["Title"] = "Announcements";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" href="/">
            <span class="brand-text">Neighborly</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Facilities">All Facilities</a></li>
                        <li><a class="dropdown-item" href="/Home/MyBookings">My Bookings</a></li>
                        <li><a class="dropdown-item" href="/Home/MyBookings">All Bookings</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle active" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Annoucements">All Announcements</a></li>
                        <li><a class="dropdown-item" href="/Home/Calendar">View Calendar</a></li>
                        <li><a class="dropdown-item" href="/Home/Forum">Community Forum</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Services">All Services</a></li>
                        <li><a class="dropdown-item" href="/Home/MyServiceRequests">My Services</a></li>
                        <li><a class="dropdown-item" href="/Home/MyServiceRequests">All Request</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Billing
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Billing">Unpaid Bills</a></li>
                        <li><a class="dropdown-item" href="/Home/Billing">Payment History</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/Home/Contact">Contact</a>
                </li>
            </ul>

            <!-- Updated profile menu section -->
            <div class="nav-items-right">
                <!-- Profile Menu -->
                <div class="nav-item dropdown profile-menu">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a class="profile-link dropdown-toggle" href="#" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="profile-avatar">
                                <i class="bi bi-person-fill"></i>
                            </div>
                        </a>
                        <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                            <li class="dropdown-header">
                                <div class="user-info">
                                    <span class="user-name">@User.Identity.Name</span>
                                    <span class="user-role">HomeOwner</span>
                                </div>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Home/Profile">
                                    <i class="bi bi-person-gear"></i> Profile Settings
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                      asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="dropdown-item logout-item">
                                        <i class="bi bi-box-arrow-right"></i> Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <a class="profile-link dropdown-toggle" href="#" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="profile-avatar">
                                <i class="bi bi-person"></i>
                            </div>
                        </a>
                        <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login">
                                    <i class="bi bi-box-arrow-in-right"></i> Login
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">
                                    <i class="bi bi-person-plus"></i> Register
                                </a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</nav>

<!-- Main Content Section -->
<div class="container announcements-section">
    <div class="page-header">
        <h1 class="page-title">Community Announcements</h1>
        <p class="text-muted">Stay updated with the latest news and events</p>
    </div>
    
    <!-- Enhanced Filter Bar - Added for consistency with Forum page -->
    <div class="filter-bar-container mb-4">
        <div class="filter-bar">
            <div class="filter-buttons">
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="categoriesDropdown"
                            data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-filter me-1"></i> 
                        @(string.IsNullOrEmpty(ViewBag.CurrentCategory) ? "All Categories" : ViewBag.CurrentCategory)
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="categoriesDropdown">
                        <li><a class="dropdown-item @(string.IsNullOrEmpty(ViewBag.CurrentCategory) ? "active" : "")" href="@Url.Action("Annoucements", new { search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })">All Categories</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item @(ViewBag.CurrentCategory == "Important" ? "active" : "")" href="@Url.Action("Annoucements", new { category = "Important", search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })">Important</a></li>
                        <li><a class="dropdown-item @(ViewBag.CurrentCategory == "Event" ? "active" : "")" href="@Url.Action("Annoucements", new { category = "Event", search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })">Events</a></li>
                        <li><a class="dropdown-item @(ViewBag.CurrentCategory == "Update" ? "active" : "")" href="@Url.Action("Annoucements", new { category = "Update", search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })">Updates</a></li>
                        <li><a class="dropdown-item @(ViewBag.CurrentCategory == "General" ? "active" : "")" href="@Url.Action("Annoucements", new { category = "General", search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })">General</a></li>
                    </ul>
                </div>
                
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown"
                            data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-sort-down me-1"></i> 
                        @(ViewBag.CurrentSort ?? "Newest First")
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                        <li><a class="dropdown-item @(ViewBag.CurrentSort == "Newest First" || ViewBag.CurrentSort == null ? "active" : "")" href="@Url.Action("Annoucements", new { category = ViewBag.CurrentCategory, search = ViewBag.CurrentSearch, sort = "Newest First" })">Newest First</a></li>
                        <li><a class="dropdown-item @(ViewBag.CurrentSort == "Oldest First" ? "active" : "")" href="@Url.Action("Annoucements", new { category = ViewBag.CurrentCategory, search = ViewBag.CurrentSearch, sort = "Oldest First" })">Oldest First</a></li>
                    </ul>
                </div>
            </div>

            <div class="search-box">
                <form method="get" action="@Url.Action("Annoucements")" class="search-form">
                    <div class="input-group">
                        <input type="text" class="form-control" name="search" placeholder="Search announcements..."
                               value="@ViewBag.CurrentSearch">
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentCategory))
                        {
                            <input type="hidden" name="category" value="@ViewBag.CurrentCategory">
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentSort))
                        {
                            <input type="hidden" name="sort" value="@ViewBag.CurrentSort">
                        }
                        <button class="btn btn-outline-primary" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- Active filters display -->
        @if (!string.IsNullOrEmpty(ViewBag.CurrentCategory) || !string.IsNullOrEmpty(ViewBag.CurrentSearch))
        {
            <div class="active-filters mt-2">
                <span class="filters-label">Active filters:</span>
                @if (!string.IsNullOrEmpty(ViewBag.CurrentCategory))
                {
                    <a href="@Url.Action("Annoucements", new { search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })" class="filter-badge category">
                        Category: @ViewBag.CurrentCategory <i class="bi bi-x-circle"></i>
                    </a>
                }
                @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch))
                {
                    <a href="@Url.Action("Annoucements", new { category = ViewBag.CurrentCategory, sort = ViewBag.CurrentSort })" class="filter-badge search">
                        Search: @ViewBag.CurrentSearch <i class="bi bi-x-circle"></i>
                    </a>
                }
            </div>
        }
    </div>
    
    <!-- Announcements and Notifications -->
    <div class="row gx-4 gy-4">
        <div class="col-lg-8">
            <!-- Announcements List -->
            <div class="announcements-list">
                @if (Model.Any())
                {
                    @foreach (var announcement in Model)
                    {
                        <div class="announcement-card shadow-sm @(announcement.IsUrgent ? "urgent" : "")">
                            <div class="announcement-header">
                                @if (announcement.IsUrgent)
                                {
                                    <div class="announcement-badge">
                                        <i class="bi bi-exclamation-triangle-fill me-1"></i> Urgent
                                    </div>
                                }
                                <div class="announcement-category-badge">
                                    <span class="badge bg-@(announcement.Category switch {
                                        "Important" => "danger",
                                        "Event" => "info",
                                        "Update" => "success",
                                        _ => "secondary"
                                    })">
                                        <i class="bi bi-@(announcement.Category switch {
                                            "Important" => "info-circle",
                                            "Event" => "calendar-event",
                                            "Update" => "arrow-clockwise",
                                            _ => "chat-text"
                                        })"></i> @announcement.Category
                                    </span>
                                </div>
                                <h3>@announcement.Title</h3>
                                <div class="announcement-meta">
                                    <div class="meta-item">
                                        <i class="bi bi-clock"></i> Posted on @announcement.PostedDate.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="meta-item">
                                        <i class="bi bi-clock-history"></i> @announcement.PostedDate.ToString("h:mm tt")
                                    </div>
                                </div>
                            </div>
                            
                            <div class="announcement-content">
                                <div class="scrollable-content">
                                    <p>@announcement.Content</p>
                                </div>
                            </div>

                            @if (announcement.EventDateTime.HasValue)
                            {
                                <div class="event-date-box">
                                    <i class="bi bi-calendar-event"></i>
                                    <div class="event-info">
                                        <span class="event-label">Event Date</span>
                                        <span class="event-date">
                                            @announcement.EventDateTime.Value.ToString("MMMM dd, yyyy") at 
                                            <strong>@announcement.EventDateTime.Value.ToString("h:mm tt")</strong>
                                        </span>
                                    </div>
                                </div>
                            }

                            <div class="announcement-footer">
                                <div class="announcement-actions">
                                    <button class="btn btn-sm btn-outline-primary" onclick="alert('Sharing feature coming soon!')">
                                        <i class="bi bi-share"></i> Share
                                    </button>
                                    <button class="btn btn-sm btn-outline-secondary" onclick="alert('Added to your calendar!')">
                                        <i class="bi bi-calendar-plus"></i> Add to Calendar
                                    </button>
                                    <button class="btn btn-sm btn-link text-primary expand-content-btn">
                                        <i class="bi bi-arrows-angle-expand"></i> <span class="btn-text">Show More</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-info text-center py-5 shadow-sm">
                        <i class="bi bi-info-circle-fill display-4"></i>
                        <h4 class="mt-3">No announcements available</h4>
                        <p>@((!string.IsNullOrEmpty(ViewBag.CurrentCategory) || !string.IsNullOrEmpty(ViewBag.CurrentSearch)) ? 
                            "No announcements match your current filters. Try changing your search criteria or remove filters." : 
                            "There are currently no announcements to display.")</p>
                        
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentCategory) || !string.IsNullOrEmpty(ViewBag.CurrentSearch))
                        {
                            <a href="@Url.Action("Annoucements")" class="btn btn-outline-primary mt-2">
                                <i class="bi bi-arrow-repeat me-2"></i>View All Announcements
                            </a>
                        }
                    </div>
                }
            </div>
            
            <!-- Pagination -->
            @if (Model.Any() && ViewBag.TotalPages > 1)
            {
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Annoucements", new { page = ViewBag.CurrentPage - 1, category = ViewBag.CurrentCategory, search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })" aria-label="Previous">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link"><i class="bi bi-chevron-left"></i></span>
                            </li>
                        }

                        @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Annoucements", new { page = i, category = ViewBag.CurrentCategory, search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Annoucements", new { page = ViewBag.CurrentPage + 1, category = ViewBag.CurrentCategory, search = ViewBag.CurrentSearch, sort = ViewBag.CurrentSort })" aria-label="Next">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link"><i class="bi bi-chevron-right"></i></span>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>

        <!-- Sidebar with Calendar and Polls -->
        <div class="col-lg-4">
            <!-- Upcoming Events Widget -->
            <div class="sidebar-widget calendar-widget shadow-sm">
                <div class="widget-header">
                    <h3><i class="bi bi-calendar-week me-2"></i>Upcoming Events</h3>
                </div>
                <div class="widget-body">
                    <div class="upcoming-events">
                        @if (ViewBag.UpcomingEvents != null && ((List<HomeOwners.Models.Event>)ViewBag.UpcomingEvents).Any())
                        {
                            foreach (var evt in ViewBag.UpcomingEvents)
                            {
                                <div class="upcoming-event">
                                    <div class="event-date">
                                        <span class="date">@evt.StartTime.Day</span>
                                        <span class="month">@evt.StartTime.ToString("MMM")</span>
                                    </div>
                                    <div class="event-details">
                                        <h4>@evt.Title</h4>
                                        <p><i class="bi bi-clock"></i> @evt.StartTime.ToString("h:mm tt")</p>
                                        @if (!string.IsNullOrEmpty(evt.Location))
                                        {
                                            <p class="event-location"><i class="bi bi-geo-alt"></i> @evt.Location</p>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="bi bi-calendar-x fs-1 text-muted"></i>
                                <p class="mt-2 mb-0">No upcoming events</p>
                            </div>
                        }
                    </div>

                    <div class="text-center mt-4">
                        <a href="@Url.Action("Calendar")" class="btn btn-primary">
                            <i class="bi bi-calendar3 me-2"></i>View Full Calendar
                        </a>
                    </div>
                </div>
            </div>

            <!-- Active Polls Widget -->
            <div class="sidebar-widget polls-widget shadow-sm">
                <div class="widget-header">
                    <h3><i class="bi bi-bar-chart-line me-2"></i>Community Polls</h3>
                </div>
                <div class="widget-body">
                    <div class="polls-container">
                        @if (ViewBag.ActivePolls != null && ((List<HomeOwners.Models.Poll>)ViewBag.ActivePolls).Any())
                        {
                            foreach (var poll in ViewBag.ActivePolls)
                            {
                                <div class="poll-card">
                                    <h4>@poll.Title</h4>
                                    <p>@poll.Question</p>

                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <form asp-action="CastVote" asp-controller="Home" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="pollId" value="@poll.Id" />
                                            <div class="poll-options">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="voteValue" id="poll-@poll.Id-yes" value="true" required>
                                                    <label class="form-check-label" for="poll-@poll.Id-yes">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="voteValue" id="poll-@poll.Id-no" value="false" required>
                                                    <label class="form-check-label" for="poll-@poll.Id-no">No</label>
                                                </div>
                                            </div>

                                            <button type="submit" class="btn btn-primary w-100 mt-3">Submit Vote</button>
                                        </form>

                                        <div class="poll-results mt-3">
                                            <div class="vote-progress">
                                                <div class="progress" style="height: 24px; border-radius: 12px; overflow: hidden;">
                                                    <div class="progress-bar bg-success" role="progressbar" style="width: @(poll.YesPercentage)%"
                                                         aria-valuenow="@poll.YesPercentage" aria-valuemin="0" aria-valuemax="100">
                                                        Yes: @poll.YesPercentage%
                                                    </div>
                                                    <div class="progress-bar bg-danger" role="progressbar" style="width: @(poll.NoPercentage)%"
                                                         aria-valuenow="@poll.NoPercentage" aria-valuemin="0" aria-valuemax="100">
                                                        No: @poll.NoPercentage%
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="login-prompt">
                                            <div class="alert alert-info">
                                                <i class="bi bi-info-circle me-2"></i>
                                                Please log in to vote in this poll.
                                            </div>
                                        </div>
                                    }

                                    <div class="poll-meta">
                                        <span>
                                            <i class="bi bi-clock-history me-1"></i> 
                                            Ends in <strong>@poll.DaysRemaining</strong> days
                                        </span>
                                        <span>
                                            <i class="bi bi-people me-1"></i> 
                                            <strong>@poll.TotalVotes</strong> votes
                                        </span>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="bi bi-bar-chart-line fs-1 text-muted"></i>
                                <p class="mt-2 mb-0">No active polls</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Community Quick Links -->
            <div class="sidebar-widget quick-links-widget shadow-sm">
                <div class="widget-header">
                    <h3><i class="bi bi-link-45deg me-2"></i>Quick Links</h3>
                </div>
                <div class="widget-body">
                    <div class="quick-links">
                        <a href="#" class="quick-link-item">
                            <i class="bi bi-megaphone"></i>
                            <span>Community Rules</span>
                        </a>
                        <a href="#" class="quick-link-item">
                            <i class="bi bi-calendar2-event"></i>
                            <span>Community Calendar</span>
                        </a>
                        <a href="#" class="quick-link-item">
                            <i class="bi bi-card-checklist"></i>
                            <span>Maintenance Schedule</span>
                        </a>
                        <a href="#" class="quick-link-item">
                            <i class="bi bi-chat-text"></i>
                            <span>Discussion Forum</span>
                        </a>
                        <a href="#" class="quick-link-item">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Documents & Forms</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- CSS Styles -->
<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-dark: #333;
        --text-muted: #6c757d;
        --text-light: #f8f9fa;
        --border-radius: 12px;
        --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        --card-shadow: 0 2px 10px rgba(0,0,0,0.05);
        --transition: all 0.3s ease;
        --font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    }

    body {
        font-family: var(--font-family);
        background-color: #f7f9fc;
        color: var(--text-dark);
    }

    /* Navbar Styles */
    .navbar {
        background-color: rgba(78, 110, 77, 0.95) !important;
        backdrop-filter: blur(10px);
        padding: 0.75rem 0;
        transition: var(--transition);
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    }

    .navbar-brand {
        font-weight: 700;
        color: white !important;
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    .brand-text {
        background: linear-gradient(45deg, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .navbar-nav {
        gap: 0.5rem;
    }

    .navbar-nav .nav-link {
        color: white !important;
        font-weight: 500;
        font-size: 0.95rem;
        padding: 0.6rem 1rem !important;
        border-radius: 4px;
        transition: var(--transition);
        position: relative;
    }

    .navbar-nav .nav-link:hover,
    .navbar-nav .nav-link.active {
        background-color: rgba(255, 255, 255, 0.15);
        transform: translateY(-1px);
    }

    .navbar-nav .dropdown-menu {
        background-color: white;
        border: none;
        border-radius: 8px;
        box-shadow: var(--box-shadow);
        padding: 0.5rem;
        margin-top: 0.5rem;
        border-top: 3px solid var(--primary-color);
    }

    .navbar-nav .dropdown-item {
        padding: 0.6rem 1rem;
        color: var(--text-dark);
        border-radius: 4px;
        font-size: 0.9rem;
        transition: var(--transition);
    }

    .navbar-nav .dropdown-item:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
        transform: translateX(3px);
    }

    .dropdown-divider {
        margin: 0.5rem 0;
        border-top: 1px solid rgba(0, 0, 0, 0.05);
    }

    .nav-items-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    .profile-menu .profile-link {
        padding: 0 !important;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
    }

    .bi-person-fill {
        font-size: 1.2rem;
        color: white;
    }

    .profile-avatar {
        width: 38px;
        height: 38px;
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.3rem;
        transition: var(--transition);
        border: 2px solid rgba(255, 255, 255, 0.2);
    }

    .profile-link:hover .profile-avatar {
        transform: translateY(-2px);
        background-color: rgba(255, 255, 255, 0.25);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .profile-dropdown {
        min-width: 250px;
        padding: 0.75rem 0.5rem;
    }

    .profile-dropdown .dropdown-header {
        padding: 0.5rem 1rem;
        border-bottom: none;
    }

    .user-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .user-name {
        font-weight: 600;
        color: var(--text-dark);
        font-size: 1rem;
    }

    .user-role {
        color: var(--text-muted);
        font-size: 0.8rem;
    }

    .profile-dropdown .dropdown-item {
        padding: 0.7rem 1rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: var(--text-dark);
        transition: var(--transition);
        border-radius: 6px;
        margin: 0.2rem 0.5rem;
    }

    .profile-dropdown .dropdown-item i {
        font-size: 1.1rem;
        color: var(--primary-color);
        width: 20px;
        text-align: center;
    }

    .profile-dropdown .dropdown-item:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
        transform: translateX(3px);
    }

    .logout-item {
        color: #dc3545 !important;
    }

    .logout-item i {
        color: #dc3545 !important;
    }

    /* Announcements Section Styles */
    .announcements-section {
        padding-top: 100px;
        padding-bottom: 5rem;
    }

    .page-header {
        margin-bottom: 2rem;
        text-align: center;
    }

    .page-title {
        color: var(--primary-color);
        font-weight: 700;
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        letter-spacing: -0.5px;
    }

    /* Announcement Card Design */
    .announcement-card {
        background: white;
        border-radius: var(--border-radius);
        margin-bottom: 1.5rem;
        position: relative;
        border: none;
        transition: var(--transition);
        overflow: hidden;
        box-shadow: var(--card-shadow);
        display: flex;
        flex-direction: column;
    }

    .announcement-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--box-shadow);
    }

    .announcement-card.urgent {
        border-left: 4px solid #dc3545;
        background-color: #fff9f9;
    }

    .announcement-header {
        padding: 1.75rem 1.75rem 0.5rem;
    }

    .announcement-badge {
        position: absolute;
        top: 1.25rem;
        right: 1.25rem;
        background-color: #dc3545;
        color: white;
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        box-shadow: 0 2px 10px rgba(220, 53, 69, 0.2);
        z-index: 1;
    }

    .announcement-category-badge {
        margin-bottom: 1rem;
    }

    .announcement-category-badge .badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
        display: inline-flex;
        align-items: center;
        gap: 0.35rem;
        font-weight: 500;
        letter-spacing: 0.5px;
    }

    .announcement-card h3 {
        color: var(--primary-color);
        font-size: 1.5rem;
        margin-bottom: 0.75rem;
        font-weight: 700;
        line-height: 1.3;
    }

    .announcement-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
        color: var(--text-muted);
        font-size: 0.9rem;
        margin-bottom: 0.75rem;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .announcement-content {
        padding: 0.5rem 1.75rem;
        color: var(--text-dark);
        flex-grow: 1;
    }

    /* Scrollable Content Area */
    .scrollable-content {
        max-height: 120px;
        overflow-y: auto;
        padding-right: 10px;
        position: relative;
        transition: max-height 0.4s ease;
    }

    .scrollable-content::-webkit-scrollbar {
        width: 6px;
    }

    .scrollable-content::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .scrollable-content::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 10px;
    }

    .scrollable-content::-webkit-scrollbar-thumb:hover {
        background: #a1a1a1;
    }

    .scrollable-content.expanded {
        max-height: 500px;
    }

    .expand-content-btn {
        background: none;
        border: none;
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        cursor: pointer;
        color: var(--primary-color);
        transition: var(--transition);
    }

    .expand-content-btn:hover {
        text-decoration: underline;
    }

    .event-date-box {
        background-color: var(--primary-light);
        border-left: 3px solid var(--primary-color);
        margin: 1rem 1.75rem;
        border-radius: 8px;
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        padding: 1rem;
    }

    .event-date-box i {
        color: var(--primary-color);
        font-size: 1.5rem;
        margin-top: 0.125rem;
    }

    .event-info {
        display: flex;
        flex-direction: column;
    }

    .event-label {
        font-weight: 600;
        color: var(--primary-color);
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
    }

    .event-date {
        color: var(--text-dark);
    }

    .announcement-footer {
        padding: 1rem 1.75rem 1.75rem;
        border-top: 1px solid rgba(0,0,0,0.05);
        margin-top: auto;
    }

    .announcement-actions {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
        flex-wrap: wrap;
    }

    /* Sidebar Widget Styling */
    .sidebar-widget {
        background: white;
        border-radius: var(--border-radius);
        margin-bottom: 1.75rem;
        box-shadow: var(--card-shadow);
        transition: var(--transition);
        overflow: hidden;
    }

    .sidebar-widget:hover {
        box-shadow: var(--box-shadow);
    }

    .widget-header {
        padding: 1.5rem 1.5rem 1rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    .widget-header h3 {
        color: var(--primary-color);
        font-size: 1.4rem;
        margin-bottom: 0;
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .widget-body {
        padding: 1.5rem;
    }

    /* Upcoming Events Section */
    .upcoming-events {
        max-height: 380px;
        overflow-y: auto;
        margin: -0.5rem;
        padding: 0.5rem;
        scrollbar-width: thin;
    }
    
    .upcoming-events::-webkit-scrollbar {
        width: 6px;
    }

    .upcoming-events::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .upcoming-events::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 10px;
    }

    .upcoming-events::-webkit-scrollbar-thumb:hover {
        background: #a1a1a1;
    }
    
    .upcoming-event {
        display: flex;
        gap: 12px;
        padding: 16px;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: var(--transition);
        background: #f8f9fa;
        border-radius: 8px;
        margin-bottom: 1rem;
    }
    
    .upcoming-event:hover {
        background-color: var(--primary-light);
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }
    
    .event-date {
        min-width: 50px;
        text-align: center;
    }
    
    .event-date .date {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--primary-color);
        line-height: 1;
    }
    
    .event-date .month {
        font-size: 0.85rem;
        color: var(--text-muted);
        text-transform: uppercase;
        font-weight: 500;
    }
    
    .event-details {
        flex: 1;
    }
    
    .event-details h4 {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 0.4rem;
    }
    
    .event-details p {
        color: var(--text-muted);
        font-size: 0.85rem;
        margin-bottom: 0.25rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .event-location {
        font-style: italic;
    }
    
    /* Empty State Styling */
    .empty-state {
        display: flex;
        flex-direction: column;
        align-items: center;
        color: var(--text-muted);
        padding: 2rem 0;
    }

    /* Poll Card Styling */
    .polls-container {
        max-height: 400px;
        overflow-y: auto;
        padding-right: 4px;
        margin-right: -4px;
        scrollbar-width: thin;
    }

    .polls-container::-webkit-scrollbar {
        width: 6px;
    }

    .polls-container::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .polls-container::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 10px;
    }

    .polls-container::-webkit-scrollbar-thumb:hover {
        background: #a1a1a1;
    }

    .poll-card {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 1.5rem;
        transition: var(--transition);
        border: 1px solid rgba(0,0,0,0.05);
        margin-bottom: 1.25rem;
    }

    .poll-card:last-child {
        margin-bottom: 0;
    }

    .poll-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

    .poll-card h4 {
        color: var (--primary-color);
        font-size: 1.1rem;
        margin-bottom: 0.75rem;
        font-weight: 600;
    }

    .poll-card p {
        color: var(--text-dark);
        margin-bottom: 1.25rem;
        line-height: 1.5;
    }

    .poll-options {
        margin: 1rem 0;
    }

    .form-check {
        padding: 0.5rem 1rem;
        background: white;
        border-radius: 8px;
        margin-bottom: 0.5rem;
        border: 1px solid rgba(0,0,0,0.05);
        transition: var(--transition);
    }

    .form-check:hover {
        background: var(--primary-lighter);
        border-color: var(--primary-light);
        transform: translateX(3px);
    }

    .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .vote-progress {
        margin-top: 0.75rem;
    }

    .poll-meta {
        font-size: 0.9rem;
        color: var(--text-muted);
        margin-top: 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .login-prompt {
        margin: 1rem 0;
    }

    .login-prompt .alert {
        margin-bottom: 0;
        display: flex;
        align-items: center;
    }

    /* Quick links widget */
    .quick-links {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .quick-link-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem;
        border-radius: 8px;
        background-color: #f8f9fa;
        color: var(--text-dark);
        text-decoration: none;
        transition: var(--transition);
    }

    .quick-link-item:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
        transform: translateX(5px);
    }

    .quick-link-item i {
        font-size: 1.25rem;
        color: var(--primary-color);
    }

    /* Button Styles */
    .btn-outline-primary {
        color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-outline-primary:hover {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
    }

    .btn-outline-primary:not(:disabled):not(.disabled):active,
    .btn-outline-primary:not(:disabled):not(.disabled).active {
        color: white;
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-outline-primary:focus,
    .btn-outline-primary.focus {
        box-shadow: 0 0 0 0.2rem rgba(78, 110, 77, 0.25);
    }

    .btn-outline-secondary {
        color: var(--text-muted);
        border-color: #dee2e6;
    }

    .btn-outline-secondary:hover {
        background-color: #f8f9fa;
        color: var(--text-dark);
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        transition: var(--transition);
    }

    .btn-primary:hover {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(78, 110, 77, 0.3);
    }

    /* Filter Bar Styles (copied from Forum page for consistency) */
    .filter-bar-container {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        padding: 1.25rem;
    }

    .filter-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .filter-buttons {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .search-box {
        width: 100%;
        max-width: 300px;
    }

    .search-form {
        margin-bottom: 0;
    }

    .active-filters {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.75rem;
    }

    .filters-label {
        font-size: 0.85rem;
        color: var(--text-muted);
    }

    .filter-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.85rem;
        text-decoration: none;
        background-color: var(--primary-light);
        color: var(--primary-color);
        transition: var(--transition);
    }

    .filter-badge:hover {
        background-color: var(--primary-color);
        color: white;
    }

    .filter-badge.search {
        background-color: rgba(108, 117, 125, 0.1);
        color: var(--text-muted);
    }

    .filter-badge.search:hover {
        background-color: var(--text-muted);
        color: white;
    }

    /* Pagination */
    .pagination {
        gap: 0.35rem;
    }

    .page-link {
        color: var(--primary-color);
        border-color: var(--primary-light);
        border-radius: 0.25rem;
        padding: 0.4rem 0.75rem;
        transition: var(--transition);
    }

    .page-item.active .page-link {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .page-link:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
        border-color: var(--primary-color);
    }

    /* Dropdown active item */
    .dropdown-item.active {
        background-color: var(--primary-light);
        color: var(--primary-color);
        font-weight: 500;
    }
</style>

<!-- JavaScript for expand/collapse functionality -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const expandButtons = document.querySelectorAll('.expand-content-btn');
        
        expandButtons.forEach(button => {
            button.addEventListener('click', function() {
                const card = this.closest('.announcement-card');
                const content = card.querySelector('.scrollable-content');
                const btnText = this.querySelector('.btn-text');
                const icon = this.querySelector('.bi');
                
                if (content.classList.contains('expanded')) {
                    content.classList.remove('expanded');
                    btnText.textContent = 'Show More';
                    icon.classList.remove('bi-arrows-angle-contract');
                    icon.classList.add('bi-arrows-angle-expand');
                    
                    // Scroll back to the top of the content
                    content.scrollTop = 0;
                    
                    // Scroll the page to the announcement card
                    card.scrollIntoView({ behavior: 'smooth', block: 'start' });
                } else {
                    content.classList.add('expanded');
                    btnText.textContent = 'Show Less';
                    icon.classList.remove('bi-arrows-angle-expand');
                    icon.classList.add('bi-arrows-angle-contract');
                }
            });
        });
    });
</script>