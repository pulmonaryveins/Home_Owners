﻿<!-- Views/Home/Calendar.cshtml -->
@model IEnumerable<HomeOwners.Models.Event>
@{
    ViewData["Title"] = "Community Calendar";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" href="/">
            <span class="brand-text">Neighborly</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Facilities">All Facilities</a></li>
                        <li><a class="dropdown-item" href="/Home/MyBookings">My Bookings</a></li>
                        <li><a class="dropdown-item" href="/Home/MyBookings">All Bookings</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle active" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Annoucements">All Announcements</a></li>
                        <li><a class="dropdown-item" href="/Home/Calendar">View Calendar</a></li>
                        <li><a class="dropdown-item" href="/Home/Forum">Community Forum</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Services">All Services</a></li>
                        <li><a class="dropdown-item" href="/Home/MyServiceRequests">My Services</a></li>
                        <li><a class="dropdown-item" href="/Home/MyServiceRequests">All Request</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Billing
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Billing">Unpaid Bills</a></li>
                        <li><a class="dropdown-item" href="/Home/Billing">Payment History</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/Home/Contact">Contact</a>
                </li>
            </ul>

            <!-- Updated profile menu section -->
            <div class="nav-items-right">
                <!-- Profile Menu -->
                <div class="nav-item dropdown profile-menu">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a class="profile-link dropdown-toggle" href="#" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="profile-avatar">
                                <i class="bi bi-person-fill"></i>
                            </div>
                        </a>
                        <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                            <li class="dropdown-header">
                                <div class="user-info">
                                    <span class="user-name">@User.Identity.Name</span>
                                    <span class="user-role">HomeOwner</span>
                                </div>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Home/Profile">
                                    <i class="bi bi-person-gear"></i> Profile Settings
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                      asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="dropdown-item logout-item">
                                        <i class="bi bi-box-arrow-right"></i> Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <a class="profile-link dropdown-toggle" href="#" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="profile-avatar">
                                <i class="bi bi-person"></i>
                            </div>
                        </a>
                        <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login">
                                    <i class="bi bi-box-arrow-in-right"></i> Login
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">
                                    <i class="bi bi-person-plus"></i> Register
                                </a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</nav>

<div class="container dashboard-container">
    <div class="dashboard-header d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-0">
                <i class="bi bi-calendar-event me-2"></i>
                Community Calendar
            </h2>
            <p class="text-muted mb-0 mt-1">Stay up-to-date with all community events and activities</p>
        </div>
        <div class="d-flex gap-2">
            <a href="/Home/Annoucements" class="btn btn-outline-primary">
                <i class="bi bi-arrow-left me-1"></i> Back to Announcements
            </a>
            <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#requestEventModal">
                <i class="bi bi-calendar-plus me-1"></i> Request New Event
            </a>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-lg-3">
            <!-- Move the Upcoming Events section here -->
            <div class="card dashboard-card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-calendar-event me-2"></i> Upcoming Events
                    </h5>
                </div>
                <div class="card-body p-0">
                    <div class="upcoming-events">
                        @if (Model.Any(e => e.StartTime > DateTime.Now))
                        {
                            foreach (var evt in Model.Where(e => e.StartTime > DateTime.Now).OrderBy(e => e.StartTime).Take(5))
                            {
                                <div class="upcoming-event">
                                    <div class="event-date">
                                        <span class="date">@evt.StartTime.Day</span>
                                        <span class="month">@evt.StartTime.ToString("MMM")</span>
                                    </div>
                                    <div class="event-details">
                                        <h4>@evt.Title</h4>
                                        <p>
                                            <i class="bi bi-clock"></i>
                                            @evt.StartTime.ToString("h:mm tt") - @evt.EndTime.ToString("h:mm tt")
                                        </p>
                                        @if (!string.IsNullOrEmpty(evt.Location))
                                        {
                                            <p class="event-location">
                                                <i class="bi bi-geo-alt"></i> @evt.Location
                                            </p>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="p-4 text-center">
                                <div class="empty-state">
                                    <i class="bi bi-calendar-x fs-1 text-muted"></i>
                                    <p class="mt-2 mb-0">No upcoming events</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-footer bg-white py-3">
                    <button id="addToMyCalendar" class="btn btn-primary w-100">
                        <i class="bi bi-cloud-download me-2"></i> Sync to My Calendar
                    </button>
                </div>
            </div>

            <div class="card dashboard-card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-filter-circle me-2"></i> Filters
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Event Categories</label>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterCommunity" checked>
                            <label class="form-check-label" for="filterCommunity">
                                <span class="category-dot" style="background-color: #4e6e4d;"></span> Community
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterSports" checked>
                            <label class="form-check-label" for="filterSports">
                                <span class="category-dot" style="background-color: #0d6efd;"></span> Sports
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterMeeting" checked>
                            <label class="form-check-label" for="filterMeeting">
                                <span class="category-dot" style="background-color: #dc3545;"></span> Meeting
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="filterSocial" checked>
                            <label class="form-check-label" for="filterSocial">
                                <span class="category-dot" style="background-color: #ffc107;"></span> Social
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="filterOther" checked>
                            <label class="form-check-label" for="filterOther">
                                <span class="category-dot" style="background-color: #6c757d;"></span> Other
                            </label>
                        </div>
                    </div>
                    
                    <button id="applyFilters" class="btn btn-primary w-100">
                        <i class="bi bi-funnel me-1"></i> Apply Filters
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-lg-9">
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-calendar3 me-2"></i> Calendar of Events
                        </h5>
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-primary btn-sm" id="printCalendar">
                                <i class="bi bi-printer"></i> Print
                            </button>
                            <button type="button" class="btn btn-outline-primary btn-sm" id="downloadCalendar">
                                <i class="bi bi-download"></i> Export
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div id="homeownerCalendar" class="admin-calendar"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Event Details Modal -->
<div class="modal fade" id="eventDetailModal" tabindex="-1" aria-labelledby="eventDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="eventDetailModalLabel">
                    <i class="bi bi-calendar-event me-2"></i> Event Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h4 id="eventTitle" class="mb-3"></h4>
                <div id="eventDescription" class="mb-4"></div>
                
                <div class="event-details-list">
                    <div class="event-detail-item" id="eventTimeContainer">
                        <div class="event-detail-icon">
                            <i class="bi bi-clock"></i>
                        </div>
                        <div class="event-detail-content">
                            <span class="event-detail-label">When</span>
                            <span id="eventTime" class="event-detail-value"></span>
                        </div>
                    </div>
                    
                    <div class="event-detail-item" id="eventLocationContainer">
                        <div class="event-detail-icon">
                            <i class="bi bi-geo-alt"></i>
                        </div>
                        <div class="event-detail-content">
                            <span class="event-detail-label">Where</span>
                            <span id="eventLocation" class="event-detail-value"></span>
                        </div>
                    </div>
                    
                    <div class="event-detail-item">
                        <div class="event-detail-icon">
                            <i class="bi bi-tag"></i>
                        </div>
                        <div class="event-detail-content">
                            <span class="event-detail-label">Category</span>
                            <span id="eventCategory" class="event-detail-value"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addEventToCalendarBtn">
                    <i class="bi bi-calendar-plus me-1"></i> Add to My Calendar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Request Event Modal -->
<div class="modal fade" id="requestEventModal" tabindex="-1" aria-labelledby="requestEventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="requestEventModalLabel">
                    <i class="bi bi-calendar-plus me-2"></i> Request New Event
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="requestEventForm">
                <div class="modal-body">
                    <p class="text-muted mb-4">
                        Submit your event request for review by community administrators. Events will be added to the calendar after approval.
                    </p>
                    
                    <div class="row mb-3">
                        <div class="col-12">
                            <label for="requestTitle" class="form-label fw-medium">Event Title <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="requestTitle" name="Title" required>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-12">
                            <label for="requestDescription" class="form-label fw-medium">Description <span class="text-danger">*</span></label>
                            <textarea class="form-control" id="requestDescription" name="Description" rows="3" required></textarea>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="requestStartTime" class="form-label fw-medium">Start Date & Time <span class="text-danger">*</span></label>
                            <input type="datetime-local" class="form-control" id="requestStartTime" name="StartTime" required>
                        </div>
                        <div class="col-md-6">
                            <label for="requestEndTime" class="form-label fw-medium">End Date & Time <span class="text-danger">*</span></label>
                            <input type="datetime-local" class="form-control" id="requestEndTime" name="EndTime" required>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="requestLocation" class="form-label fw-medium">Location</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <input type="text" class="form-control" id="requestLocation" name="Location" placeholder="Event location">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="requestCategory" class="form-label fw-medium">Category</label>
                            <select class="form-select" id="requestCategory" name="Category">
                                <option value="Community">Community</option>
                                <option value="Sports">Sports</option>
                                <option value="Meeting">Meeting</option>
                                <option value="Social">Social</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="requestIsAllDay" name="IsAllDay">
                        <label class="form-check-label" for="requestIsAllDay">All Day Event</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-send me-1"></i> Submit Request
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let currentEvent = null;
            
            // Initialize FullCalendar
            const calendarEl = document.getElementById('homeownerCalendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                themeSystem: 'bootstrap5',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                },
                events: '/api/events',
                height: 'auto',
                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    meridiem: 'short'
                },
                eventClick: function(info) {
                    showEventDetails(info.event);
                },
                eventContent: function(arg) {
                    let timeText = '';

                    if (!arg.event.allDay) {
                        let startFormat = arg.event.start ? new Intl.DateTimeFormat('en', {
                            hour: 'numeric',
                            minute: '2-digit',
                            hour12: true
                        }).format(arg.event.start) : '';

                        let endFormat = arg.event.end ? new Intl.DateTimeFormat('en', {
                            hour: 'numeric',
                            minute: '2-digit',
                            hour12: true
                        }).format(arg.event.end) : '';

                        if (startFormat && endFormat) {
                            timeText = `${startFormat} - ${endFormat}`;
                        }
                    }

                    return {
                        html: `
                            <div class="fc-event-main-frame" style="padding: 2px 4px;">
                                <div class="fc-event-title-container">
                                    <div class="fc-event-title fc-sticky" style="font-weight: bold;">${arg.event.title}</div>
                                    ${timeText ? `<div class="fc-event-time" style="font-size: 0.85em;">${timeText}</div>` : ''}
                                    ${arg.event.extendedProps.location ? `<div class="fc-event-location" style="font-size: 0.8em;"><i class="bi bi-geo-alt-fill"></i> ${arg.event.extendedProps.location}</div>` : ''}
                                </div>
                            </div>
                        `
                    };
                },
                eventDidMount: function(info) {
                    // Enable Bootstrap tooltips on events
                    new bootstrap.Tooltip(info.el, {
                        title: info.event.title,
                        placement: 'top',
                        trigger: 'hover',
                        container: 'body'
                    });
                }
            });
            calendar.render();

            // Show event details in modal
            function showEventDetails(event) {
                currentEvent = event;
                
                // Set modal header background color
                const modalHeader = document.querySelector('.modal-header');
                modalHeader.style.backgroundColor = event.backgroundColor || '#4e6e4d';
                
                // Fill modal with event details
                document.getElementById('eventTitle').textContent = event.title;
                document.getElementById('eventDescription').textContent = event.extendedProps.description || 'No description available';
                document.getElementById('eventTime').textContent = formatEventDateTime(event);
                
                // Set location if available
                const locationContainer = document.getElementById('eventLocationContainer');
                if (event.extendedProps.location) {
                    document.getElementById('eventLocation').textContent = event.extendedProps.location;
                    locationContainer.style.display = 'flex';
                } else {
                    locationContainer.style.display = 'none';
                }
                
                // Set category
                document.getElementById('eventCategory').textContent = event.extendedProps.category || 'Other';
                
                // Show modal
                const eventModal = new bootstrap.Modal(document.getElementById('eventDetailModal'));
                eventModal.show();
            }

            // Format event date and time for display
            function formatEventDateTime(event) {
                const start = new Date(event.start);
                const end = event.end ? new Date(event.end) : null;

                const dateOptions = {
                    weekday: 'long',
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                };
                
                const timeOptions = {
                    hour: 'numeric',
                    minute: '2-digit'
                };

                if (event.allDay) {
                    if (end) {
                        // Adjust all-day end date (exclusive to inclusive)
                        const adjustedEnd = new Date(end);
                        adjustedEnd.setDate(adjustedEnd.getDate() - 1);
                        
                        if (start.toDateString() === adjustedEnd.toDateString()) {
                            return `${start.toLocaleDateString('en-US', dateOptions)} (All day)`;
                        } else {
                            return `${start.toLocaleDateString('en-US', dateOptions)} - 
                                   ${adjustedEnd.toLocaleDateString('en-US', dateOptions)} (All day)`;
                        }
                    } else {
                        return `${start.toLocaleDateString('en-US', dateOptions)} (All day)`;
                    }
                } else {
                    if (end) {
                        if (start.toDateString() === end.toDateString()) {
                            return `${start.toLocaleDateString('en-US', dateOptions)}, 
                                   ${start.toLocaleTimeString('en-US', timeOptions)} - 
                                   ${end.toLocaleTimeString('en-US', timeOptions)}`;
                        } else {
                            return `${start.toLocaleDateString('en-US', dateOptions)}, 
                                   ${start.toLocaleTimeString('en-US', timeOptions)} - 
                                   ${end.toLocaleDateString('en-US', dateOptions)}, 
                                   ${end.toLocaleTimeString('en-US', timeOptions)}`;
                        }
                    } else {
                        return `${start.toLocaleDateString('en-US', dateOptions)}, 
                               ${start.toLocaleTimeString('en-US', timeOptions)}`;
                    }
                }
            }

            // Filter events
            document.getElementById('applyFilters').addEventListener('click', function() {
                // Get selected categories
                const selectedCategories = [];
                if (document.getElementById('filterCommunity').checked) selectedCategories.push('Community');
                if (document.getElementById('filterSports').checked) selectedCategories.push('Sports');
                if (document.getElementById('filterMeeting').checked) selectedCategories.push('Meeting');
                if (document.getElementById('filterSocial').checked) selectedCategories.push('Social');
                if (document.getElementById('filterOther').checked) selectedCategories.push('Other');
                
                // Apply filters to calendar
                calendar.getEvents().forEach(function(event) {
                    const category = event.extendedProps.category || 'Other';
                    if (selectedCategories.includes(category)) {
                        event.setProp('display', 'auto');
                    } else {
                        event.setProp('display', 'none');
                    }
                });
                
                // Show success message
                showToast('Filters applied', 'primary');
            });
            
            // Print calendar
            document.getElementById('printCalendar').addEventListener('click', function() {
                window.print();
            });
            
            // Download calendar as iCal
            document.getElementById('downloadCalendar').addEventListener('click', function() {
                const events = calendar.getEvents();
                if (events.length === 0) {
                    showToast('No events to export', 'warning');
                    return;
                }
                
                // Create iCal content
                let icsContent = 
                    'BEGIN:VCALENDAR\r\n' +
                    'VERSION:2.0\r\n' +
                    'PRODID:-//HomeOwners Association//Community Calendar//EN\r\n' +
                    'CALSCALE:GREGORIAN\r\n';
                
                events.forEach(function(event) {
                    // Skip filtered out events
                    if (event.display === 'none') return;
                    
                    const start = event.start;
                    const end = event.end || new Date(start.getTime() + 3600000); // Default 1 hour
                    
                    icsContent += 
                        'BEGIN:VEVENT\r\n' +
                        'UID:' + event.id + 'homeowners.com\r\n' +
                        'SUMMARY:' + event.title + '\r\n' +
                        'DTSTART:' + formatDateForIcs(start, event.allDay) + '\r\n' +
                        'DTEND:' + formatDateForIcs(end, event.allDay) + '\r\n';
                    
                    if (event.extendedProps.description) {
                        icsContent += 'DESCRIPTION:' + event.extendedProps.description.replace(/\n/g, '\\n') + '\r\n';
                    }
                    
                    if (event.extendedProps.location) {
                        icsContent += 'LOCATION:' + event.extendedProps.location + '\r\n';
                    }
                    
                    icsContent += 'END:VEVENT\r\n';
                });
                
                icsContent += 'END:VCALENDAR';
                
                // Create and trigger download
                const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });
                const url = URL.createObjectURL(blob);
                
                const link = document.createElement('a');
                link.href = url;
                link.download = 'community_calendar.ics';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
            
            // Add single event to calendar
            document.getElementById('addEventToCalendarBtn').addEventListener('click', function() {
                if (!currentEvent) return;
                
                const start = currentEvent.start;
                const end = currentEvent.end || new Date(start.getTime() + 3600000); // Default 1 hour
                
                // Create iCal content for single event
                let icsContent = 
                    'BEGIN:VCALENDAR\r\n' +
                    'VERSION:2.0\r\n' +
                    'PRODID:-//HomeOwners Association//Community Calendar//EN\r\n' +
                    'CALSCALE:GREGORIAN\r\n' +
                    'BEGIN:VEVENT\r\n' +
                    'UID:' + currentEvent.id + 'homeowners.com\r\n' +
                    'SUMMARY:' + currentEvent.title + '\r\n' +
                    'DTSTART:' + formatDateForIcs(start, currentEvent.allDay) + '\r\n' +
                    'DTEND:' + formatDateForIcs(end, currentEvent.allDay) + '\r\n';
                
                if (currentEvent.extendedProps.description) {
                    icsContent += 'DESCRIPTION:' + currentEvent.extendedProps.description.replace(/\n/g, '\\n') + '\r\n';
                }
                
                if (currentEvent.extendedProps.location) {
                    icsContent += 'LOCATION:' + currentEvent.extendedProps.location + '\r\n';
                }
                
                icsContent += 'END:VEVENT\r\n' + 'END:VCALENDAR';
                
                // Create and trigger download
                const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });
                const url = URL.createObjectURL(blob);
                
                const link = document.createElement('a');
                link.href = url;
                link.download = currentEvent.title.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.ics';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                
                showToast('Event added to your calendar', 'success');
            });
            
            // Sync entire calendar to personal calendar
            document.getElementById('addToMyCalendar').addEventListener('click', function() {
                document.getElementById('downloadCalendar').click();
            });
            
            // Handle event request form submission
            document.getElementById('requestEventForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Get form values
                const formData = new FormData(this);
                const eventData = {
                    title: formData.get('Title'),
                    description: formData.get('Description'),
                    startTime: formData.get('StartTime'),
                    endTime: formData.get('EndTime'),
                    location: formData.get('Location'),
                    category: formData.get('Category'),
                    isAllDay: formData.get('IsAllDay') === 'on'
                };
                
                // Send to server
                fetch('/api/events/request', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(eventData)
                })
                .then(response => {
                    if (response.ok) {
                        // Hide modal
                        bootstrap.Modal.getInstance(document.getElementById('requestEventModal')).hide();
                        
                        // Reset form
                        document.getElementById('requestEventForm').reset();
                        
                        // Show success message
                        showToast('Event request submitted successfully! It will be reviewed by administrators.', 'success');
                    } else {
                        throw new Error('Failed to submit event request');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Failed to submit event request. Please try again.', 'danger');
                });
            });
            
            // Format date for iCal file
            function formatDateForIcs(date, isAllDay) {
                if (isAllDay) {
                    return date.getFullYear() +
                        padNumber(date.getMonth() + 1) +
                        padNumber(date.getDate());
                } else {
                    return date.getFullYear() +
                        padNumber(date.getMonth() + 1) +
                        padNumber(date.getDate()) + 'T' +
                        padNumber(date.getHours()) +
                        padNumber(date.getMinutes()) +
                        padNumber(date.getSeconds()) + 'Z';
                }
            }
            
            function padNumber(num) {
                return num.toString().padStart(2, '0');
            }
            
            // Show toast notification
            function showToast(message, type) {
                var toastHTML = `
                <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                </div>
                `;

                // Remove any existing toast container
                const existingToast = document.querySelector('.position-fixed.bottom-0.end-0.p-3');
                if (existingToast) {
                    existingToast.remove();
                }

                // Add new toast to body
                document.body.insertAdjacentHTML('beforeend', toastHTML);

                // Initialize and show toast
                var toastEl = document.querySelector('.toast');
                var toast = new bootstrap.Toast(toastEl, {
                    delay: 3000
                });
                toast.show();
            }
        });
    </script>
}

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        /* Event category colors - standardized */
        --community-color: #4e6e4d; /* Primary theme color */
        --sports-color: #0d6efd; /* Bootstrap primary */
        --meeting-color: #dc3545; /* Bootstrap danger */
        --social-color: #ffc107; /* Bootstrap warning */
        --other-color: #6c757d; /* Bootstrap secondary */
    }

    body {
        background-color: #f5f7f9;
    }

    /* Navbar styling */
    .navbar {
        background-color: var(--primary-color) !important;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        padding: 0.75rem 0;
        transition: all 0.3s ease;
    }

    .navbar-brand {
        font-weight: 700;
        color: white !important;
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    .brand-text {
        background: linear-gradient(45deg, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .navbar-nav {
        gap: 0.5rem;
    }

    .navbar-nav .nav-link {
        color: var(--text-light) !important;
        font-weight: 500;
        font-size: 0.95rem;
        padding: 0.5rem 1rem !important;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .navbar-nav .nav-link:hover,
    .navbar-nav .nav-link.active {
        background-color: rgba(255, 255, 255, 0.15);
        transform: translateY(-1px);
    }

    /* Profile Menu Styling */
    .profile-menu .nav-link {
        padding: 0.5rem !important;
        font-size: 1.5rem;
        color: white !important;
        transition: all 0.3s ease;
    }

        .profile-menu .nav-link:hover {
            transform: translateY(-2px);
        }

    .dropdown-header {
        color: #666;
        font-weight: 600;
        padding: 0.5rem 1rem;
    }

    .dropdown-item {
        padding: 0.6rem 1rem;
        color: #333;
        border-radius: 4px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .dropdown-item:hover {
        background-color: rgba(78, 110, 77, 0.1);
        color: #4e6e4d;
    }

    .dropdown-item i {
        font-size: 1.1rem;
    }

    /* Base button styles */
    .btn-primary {
        --bs-btn-color: #fff;
        --bs-btn-bg: var(--primary-color);
        --bs-btn-border-color: var(--primary-color);
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: var(--primary-dark);
        --bs-btn-hover-border-color: var(--primary-dark);
        --bs-btn-focus-shadow-rgb: 49, 132, 253;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: var(--primary-dark);
        --bs-btn-active-border-color: var(--primary-dark);
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #fff;
        --bs-btn-disabled-bg: var(--primary-color);
        --bs-btn-disabled-border-color: var(--primary-color);
    }

    /* Other button styles */
    .btn-outline-primary {
        --bs-btn-color: var(--primary-color);
        --bs-btn-border-color: var(--primary-color);
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: var(--primary-color);
        --bs-btn-hover-border-color: var(--primary-color);
        --bs-btn-focus-shadow-rgb: 13, 110, 253;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: var(--primary-color);
        --bs-btn-active-border-color: var(--primary-color);
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: var(--primary-color);
        --bs-btn-disabled-bg: transparent;
        --bs-btn-disabled-border-color: var(--primary-color);
        --bs-gradient: none;
    }

    /* Dashboard container */
    .dashboard-container {
        margin-top: 6rem;
        padding-bottom: 2rem;
    }

    .dashboard-header {
        margin-bottom: 1.5rem;
        border-bottom: 1px solid rgba(0,0,0,0.1);
        padding-bottom: 1rem;
    }

    .dashboard-header h2 {
        font-weight: 600;
        color: var(--primary-color);
        display: flex;
        align-items: center;
        font-size: 1.5rem;
    }

    /* Card styling */
    .dashboard-card {
        border: none;
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }

    .card-header {
        background-color: white;
        border-bottom: 1px solid rgba(0,0,0,0.08);
    }

    .card-title {
        color: var(--text-dark);
        font-weight: 600;
    }

    /* Calendar specific styles */
    .admin-calendar {
        background-color: white;
        padding: 1rem;
        min-height: 700px;
    }

    /* FullCalendar theme overrides */
    .fc-theme-bootstrap5 a {
        color: var(--primary-color);
    }

    .fc .fc-button-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .fc .fc-button-primary:hover {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
    }

    .fc .fc-button-primary:disabled {
        background-color: var(--primary-light);
        border-color: var(--primary-light);
    }

    /* Event styling */
    .fc-h-event {
        border-radius: 4px;
        padding: 2px 4px;
        margin: 1px 0;
        border-width: 1px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.12);
    }

    .fc-daygrid-event {
        border-radius: 4px;
    }

    /* Event hover effect */
    .fc-event:hover {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16);
        transform: translateY(-1px);
        transition: all 0.2s ease;
    }

    /* Make text in events more readable */
    .fc-event-title {
        font-weight: 500 !important;
        padding: 2px 0;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .fc-event-time {
        font-size: 0.85em;
        opacity: 0.9;
    }

    /* Legend styles */
    .legend-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
    }

    .legend-color {
        width: 20px;
        height: 20px;
        border-radius: 4px;
        margin-right: 10px;
    }

    /* Category dot */
    .category-dot {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 8px;
    }

    /* Improve day cell appearance */
    .fc-daygrid-day {
        transition: background-color 0.2s ease;
    }

    .fc-daygrid-day:hover {
        background-color: var(--primary-lighter);
    }

    .fc-daygrid-day-number {
        font-weight: 500;
        color: var(--text-dark);
    }

    /* Today's cell highlight */
    .fc-day-today {
        background-color: var(--primary-light) !important;
    }

    /* Make day headers more visible */
    .fc-col-header-cell {
        background-color: var(--primary-color);
    }

    .fc-col-header-cell-cushion {
        color: white !important;
        font-weight: 500;
        padding: 8px 4px;
    }

    /* Updated Upcoming Events Styling to match the Announcements page */
    .upcoming-events {
        max-height: 400px;
        overflow-y: auto;
        scrollbar-width: thin;
    }

    .upcoming-events::-webkit-scrollbar {
        width: 6px;
    }

    .upcoming-events::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .upcoming-events::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 10px;
    }

    .upcoming-events::-webkit-scrollbar-thumb:hover {
        background: #a1a1a1;
    }
    
    .upcoming-event {
        display: flex;
        gap: 12px;
        padding: 16px;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        background: #f8f9fa;
        border-radius: 8px;
        margin: 0.75rem;
    }
    
    .upcoming-event:hover {
        background-color: rgba(78, 110, 77, 0.1);
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }
    
    .event-date {
        min-width: 50px;
        text-align: center;
    }
    
    .event-date .date {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--primary-color);
        line-height: 1;
    }
    
    .event-date .month {
        font-size: 0.85rem;
        color: var(--text-muted);
        text-transform: uppercase;
        font-weight: 500;
    }
    
    .event-details {
        flex: 1;
    }
    
    .event-details h4 {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 0.4rem;
    }
    
    .event-details p {
        color: var(--text-muted);
        font-size: 0.85rem;
        margin-bottom: 0.25rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .event-location {
        font-style: italic;
    }
    
    /* Empty State Styling */
    .empty-state {
        display: flex;
        flex-direction: column;
        align-items: center;
        color: var(--text-muted);
        padding: 2rem 0;
    }
    
    /* Updated card footer */
    .card-footer {
        border-top: 1px solid rgba(0,0,0,0.05);
        background-color: white;
    }
</style>