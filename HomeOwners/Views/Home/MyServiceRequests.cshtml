@* HomeOwners/Views/Home/MyServiceRequests.cshtml *@
@model List<HomeOwners.Models.ServiceRequest>
@{
    ViewData["Title"] = "My Service Requests";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
        <!-- Logo -->
        <a class="navbar-brand" href="/">
            <span class="brand-text">Neighborly</span>
        </a>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarNav" aria-controls="navbarNav"
                aria-expanded="false" aria-label="Toggle navigation">
            <i class="bi bi-list text-white"></i>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Facilities
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Facilities">All Facilities</a></li>
                        <li><a class="dropdown-item" href="/Home/MyBookings">My Bookings</a></li>
                        <li><a class="dropdown-item" href="/Home/MyBookings">All Bookings</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Announcements
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Annoucements">All Announcements</a></li>
                        <li><a class="dropdown-item" href="/Home/Calendar">View Calendar</a></li>
                        <li><a class="dropdown-item" href="/Home/Forum">Community Forum</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle active" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Services
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Services">All Services</a></li>
                        <li><a class="dropdown-item" href="/Home/MyServiceRequests">My Services</a></li>
                        <li><a class="dropdown-item" href="/Home/MyServiceRequests">All Request</a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        Billing
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Home/Billing">Unpaid Bills</a></li>
                        <li><a class="dropdown-item" href="/Home/Billing">Payment History</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/Home/Contact">Contact</a>
                </li>
            </ul>

            <!-- Updated profile menu section -->
            <div class="nav-items-right">
                <!-- Profile Menu -->
                <div class="nav-item dropdown profile-menu">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a class="profile-link dropdown-toggle" href="#" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="profile-avatar">
                                <i class="bi bi-person-fill"></i>
                            </div>
                        </a>
                        <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                            <li class="dropdown-header">
                                <div class="user-info">
                                    <span class="user-name">@User.Identity.Name</span>
                                    <span class="user-role">HomeOwner</span>
                                </div>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Home/Profile">
                                    <i class="bi bi-person-gear"></i> Profile Settings
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                                      asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="dropdown-item logout-item">
                                        <i class="bi bi-box-arrow-right"></i> Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <a class="profile-link dropdown-toggle" href="#" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="profile-avatar">
                                <i class="bi bi-person"></i>
                            </div>
                        </a>
                        <ul class="dropdown-menu profile-dropdown dropdown-menu-end">
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login">
                                    <i class="bi bi-box-arrow-in-right"></i> Login
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">
                                    <i class="bi bi-person-plus"></i> Register
                                </a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</nav>


<div class="container mt-5 pt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title">My Service Requests</h1>
        <div class="d-flex gap-2">
            <a href="javascript:history.back()" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i> Back
            </a>
            <a asp-controller="Home" asp-action="Services" class="btn btn-primary">
                <i class="bi bi-plus-lg me-2"></i> Request New Service
            </a>
        </div>
    </div>

    @if (TempData["StatusMessage"] != null)
    {
        var statusType = TempData["StatusType"]?.ToString() == "Success" ? "success" : "danger";
        <div class="alert alert-@statusType alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi @(statusType == "success" ? "bi-check-circle" : "bi-exclamation-triangle") me-2"></i>
                <span>@TempData["StatusMessage"]</span>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-header bg-white py-3">
            <ul class="nav nav-pills card-header-pills" id="requestTabs">
                <li class="nav-item">
                    <a class="nav-link active" href="#my-requests" data-bs-toggle="tab">
                        <i class="bi bi-person-check me-2"></i> My Service Requests
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#all-requests" data-bs-toggle="tab">
                        <i class="bi bi-list-check me-2"></i> All Service Requests
                    </a>
                </li>
            </ul>
        </div>
        <div class="card-body p-0">
            <div class="tab-content">
                <div class="tab-pane fade show active" id="my-requests">
                    <div class="table-responsive">
                        <table class="table table-hover request-table mb-0">
                            <thead>
                                <tr>
                                    <th>Service</th>
                                    <th>Date</th>
                                    <th>Time</th>
                                    <th>Assigned Team</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var request in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="@(string.IsNullOrEmpty(request.Service?.ImageUrl) ? "/images/placeholder.jpg" : request.Service.ImageUrl)"
                                                         alt="@request.Service?.Name" class="request-thumbnail me-3">
                                                    <span class="service-name">@request.Service?.Name</span>
                                                </div>
                                            </td>
                                            <td>@request.RequestDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <span class="time-badge">
                                                    @DateTime.Today.Add(request.PreferredTime).ToString("hh:mm tt")
                                                </span>
                                            </td>
                                            <td>
                                                @if (request.ServicePersonnelId.HasValue && request.ServicePersonnel != null)
                                                {
                                                    <div class="team-info">
                                                        <span class="team-badge">
                                                            <i class="bi bi-people-fill me-1"></i> @request.ServicePersonnel.TeamName
                                                        </span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted"><i class="bi bi-dash-circle me-1"></i>Not assigned</span>
                                                }
                                            </td>
                                            <td>
                                                @if (request.Status == ServiceRequestStatus.Pending)
                                                {
                                                    <span class="status-badge pending">
                                                        <i class="bi bi-hourglass"></i> Pending
                                                    </span>
                                                }
                                                else if (request.Status == ServiceRequestStatus.Approved)
                                                {
                                                    <span class="status-badge approved">
                                                        <i class="bi bi-check-circle"></i> Approved
                                                    </span>
                                                }
                                                else if (request.Status == ServiceRequestStatus.Done)
                                                {
                                                    <span class="status-badge completed">
                                                        <i class="bi bi-trophy"></i> Done
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="status-badge rejected">
                                                        <i class="bi bi-x-circle"></i> Rejected
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                @if (request.Status == ServiceRequestStatus.Approved)
                                                {
                                                    <form asp-controller="Home" asp-action="MarkServiceRequestAsDone" asp-route-id="@request.Id" method="post">
                                                        <button type="submit" class="btn btn-sm btn-outline-success">
                                                            <i class="bi bi-check-circle"></i> Mark as Done
                                                        </button>
                                                    </form>
                                                }
                                                else if (request.Status == ServiceRequestStatus.Pending)
                                                {
                                                    <form asp-controller="Home" asp-action="CancelServiceRequest" asp-route-id="@request.Id" method="post" onsubmit="return confirm('Are you sure you want to cancel this service request?');">
                                                        <button type="submit" class="btn btn-sm btn-outline-danger">
                                                            <i class="bi bi-x-circle"></i> Cancel
                                                        </button>
                                                    </form>
                                                }
                                                else if (request.Status == ServiceRequestStatus.Done)
                                                {
                                                    @if (request.HasRating)
                                                    {
                                                        <span class="status-badge feedback-submitted">
                                                            <i class="bi bi-star-fill me-1"></i> Experience Submitted
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-primary rate-service-btn"
                                                                data-bs-toggle="modal" data-bs-target="#ratingModal"
                                                                data-service-request-id="@request.Id"
                                                                data-service-name="@request.Service?.Name">
                                                            <i class="bi bi-star"></i> Rate Experience
                                                        </button>
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-5">
                                            <div class="empty-state">
                                                <i class="bi bi-tools display-4 text-muted"></i>
                                                <h5 class="mt-3">No service requests found</h5>
                                                <p class="text-muted mb-3">You haven't made any service requests yet</p>
                                                <a asp-controller="Home" asp-action="Services" class="btn btn-primary">
                                                    <i class="bi bi-plus-lg me-2"></i> Request a Service
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="tab-pane fade" id="all-requests">
                    <div class="table-responsive">
                        <table class="table table-hover request-table mb-0">
                            <thead>
                                <tr>
                                    <th>Service</th>
                                    <th>Date</th>
                                    <th>Time</th>
                                    <th>Assigned Team</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var allRequests = ViewBag.AllServiceRequests as List<HomeOwners.Models.ServiceRequest>;
                                }
                                @if (allRequests != null && allRequests.Any())
                                {
                                    @foreach (var request in allRequests.Where(r => r.Status == ServiceRequestStatus.Approved || r.Status == ServiceRequestStatus.Done))
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="@(string.IsNullOrEmpty(request.Service?.ImageUrl) ? "/images/placeholder.jpg" : request.Service.ImageUrl)"
                                                         alt="@request.Service?.Name" class="request-thumbnail me-3">
                                                    <span class="service-name">@request.Service?.Name</span>
                                                </div>
                                            </td>
                                            <td>@request.RequestDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <span class="time-badge">
                                                    @DateTime.Today.Add(request.PreferredTime).ToString("hh:mm tt")
                                                </span>
                                            </td>
                                            <td>
                                                @if (request.ServicePersonnelId.HasValue && request.ServicePersonnel != null)
                                                {
                                                    <div class="team-info">
                                                        <span class="team-badge">
                                                            <i class="bi bi-people-fill me-1"></i> @request.ServicePersonnel.TeamName
                                                        </span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted"><i class="bi bi-dash-circle me-1"></i>Not assigned</span>
                                                }
                                            </td>
                                            <td>
                                                @if (request.Status == ServiceRequestStatus.Approved)
                                                {
                                                    <span class="status-badge approved">
                                                        <i class="bi bi-check-circle"></i> Approved
                                                    </span>
                                                }
                                                else if (request.Status == ServiceRequestStatus.Done)
                                                {
                                                    <span class="status-badge completed">
                                                        <i class="bi bi-trophy"></i> Done
                                                    </span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center py-5">
                                            <div class="empty-state">
                                                <i class="bi bi-tools display-4 text-muted"></i>
                                                <h5 class="mt-3">No community service requests</h5>
                                                <p class="text-muted">There are currently no approved service requests</p>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<!-- Rating Modal -->
<div class="modal fade" id="ratingModal" tabindex="-1" aria-labelledby="ratingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ratingModalLabel">Rate Your Experience</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="ratingForm" asp-controller="Home" asp-action="RateServiceRequest" method="post">
                <div class="modal-body">
                    <input type="hidden" id="serviceRequestId" name="serviceRequestId" />

                    <div class="mb-4 text-center">
                        <p class="service-rating-label">How was your experience with <strong id="serviceName"></strong>?</p>

                        <div class="rating-stars-container mb-4">
                            <div class="rating-stars">
                                <i class="bi bi-star-fill rating-star" data-value="1"></i>
                                <i class="bi bi-star-fill rating-star" data-value="2"></i>
                                <i class="bi bi-star-fill rating-star" data-value="3"></i>
                                <i class="bi bi-star-fill rating-star" data-value="4"></i>
                                <i class="bi bi-star-fill rating-star" data-value="5"></i>
                            </div>
                            <div id="ratingText" class="rating-text">Click a star to rate</div>
                        </div>
                        <input type="hidden" id="rating" name="rating" value="0" required />

                        <div class="rating-level-indicators">
                            <span class="rating-level">Poor</span>
                            <span class="rating-level">Fair</span>
                            <span class="rating-level">Good</span>
                            <span class="rating-level">Very Good</span>
                            <span class="rating-level">Excellent</span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="feedback" class="form-label">Share your feedback (optional)</label>
                        <textarea class="form-control feedback-textarea" id="feedback" name="feedback" rows="4"
                                  placeholder="Tell us about your experience..."></textarea>
                        <div class="feedback-helper text-muted mt-2">
                            <i class="bi bi-lightbulb me-1"></i>
                            Your feedback helps us improve our services
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="submitRating" disabled>Submit Rating</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="alert alert-info mb-4" role="alert">
    <div class="d-flex">
        <div class="me-3">
            <i class="bi bi-info-circle-fill fs-4"></i>
        </div>
        <div>
            <h6 class="alert-heading mb-1">Service Request Policy</h6>
            <p class="mb-0">Please note that you can only have one active service request at a time. You'll need to wait until your current request is completed before making a new request.</p>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4e6e4d;
        --primary-dark: #3d5a3c;
        --primary-light: rgba(78, 110, 77, 0.1);
        --primary-lighter: rgba(78, 110, 77, 0.05);
        --text-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
    }

    .team-badge {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        background-color: rgba(78, 110, 77, 0.1);
        color: var(--primary-color);
    }

    .team-info {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.9rem;
        color: var(--text-dark);
    }

    .alert-info {
        margin-top: 3rem;
    }

    .navbar {
        background-color: rgba(78, 110, 77, 0.95) !important;
        backdrop-filter: blur(10px);
        padding: 0.75rem 0;
        transition: all 0.3s ease;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    }

    .navbar-brand {
        font-weight: 700;
        color: white !important;
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    .brand-text {
        background: linear-gradient(45deg, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .navbar-nav {
        gap: 0.5rem;
    }

        .navbar-nav .nav-link {
            color: white !important;
            font-weight: 500;
            font-size: 0.95rem;
            padding: 0.6rem 1rem !important;
            border-radius: 4px;
            transition: all 0.3s ease;
            position: relative;
        }

            .navbar-nav .nav-link:hover,
            .navbar-nav .nav-link.active {
                background-color: rgba(255, 255, 255, 0.15);
                transform: translateY(-1px);
            }

        .navbar-nav .dropdown-menu {
            background-color: white;
            border: none;
            border-radius: 8px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            padding: 0.5rem;
            margin-top: 0.5rem;
            border-top: 3px solid #4e6e4d;
        }

        .navbar-nav .dropdown-item {
            padding: 0.6rem 1rem;
            color: #555;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

            .navbar-nav .dropdown-item:hover {
                background-color: rgba(78, 110, 77, 0.1);
                color: #4e6e4d;
                transform: translateX(3px);
            }

    .dropdown-divider {
        margin: 0.5rem 0;
        border-top: 1px solid rgba(0, 0, 0, 0.05);
    }

    .nav-items-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    .profile-menu .profile-link {
        padding: 0 !important;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
    }

    .bi-person-fill {
        font-size: 1.2rem;
        color: white;
    }


    .profile-avatar {
        width: 35px;
        height: 35px;
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.3rem;
        transition: all 0.3s ease;
        border: 2px solid rgba(255, 255, 255, 0.2);
    }

    .profile-link:hover .profile-avatar {
        transform: translateY(-2px);
        background-color: rgba(255, 255, 255, 0.25);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .profile-dropdown {
        min-width: 250px;
        padding: 0.75rem 0.5rem;
    }

        .profile-dropdown .dropdown-header {
            padding: 0.5rem 1rem;
            border-bottom: none;
        }

    .user-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .user-name {
        font-weight: 600;
        color: #333;
        font-size: 1rem;
    }

    .user-role {
        color: #777;
        font-size: 0.8rem;
    }

    .profile-dropdown .dropdown-item {
        padding: 0.7rem 1rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #555;
        transition: all 0.2s ease;
        border-radius: 6px;
        margin: 0.2rem 0.5rem;
    }

        .profile-dropdown .dropdown-item i {
            font-size: 1.1rem;
            color: #4e6e4d;
            width: 20px;
            text-align: center;
        }

        .profile-dropdown .dropdown-item:hover {
            background-color: rgba(78, 110, 77, 0.1);
            color: #4e6e4d;
            transform: translateX(3px);
        }

    .logout-item {
        color: #dc3545 !important;
    }

        .logout-item i {
            color: #dc3545 !important;
        }

    .page-title {
        font-weight: 600;
        color: var(--primary-color);
        font-size: 1.75rem;
        margin-bottom: 0;
    }

    /* Card and Nav Pills */
    .card {
        border: none;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05) !important;
    }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 1rem 1.5rem;
    }

    .nav-pills .nav-link {
        border-radius: 8px;
        padding: 0.6rem 1.2rem;
        font-weight: 500;
        color: #6c757d;
        transition: all 0.3s ease;
    }

        .nav-pills .nav-link:hover {
            background-color: rgba(78, 110, 77, 0.05);
        }

        .nav-pills .nav-link.active {
            background-color: #4e6e4d;
            color: white;
            box-shadow: 0 4px 10px rgba(78, 110, 77, 0.3);
        }

    /* Table Styling */
    .request-table thead th {
        background-color: #f9fafb;
        color: #4a5568;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 0.85rem 1.25rem;
    }

    .request-table tbody tr {
        transition: all 0.2s ease;
    }

        .request-table tbody tr:hover {
            background-color: rgba(78, 110, 77, 0.03);
        }

    .request-thumbnail {
        width: 54px;
        height: 40px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.08);
        transition: transform 0.3s ease;
    }

    .request-table tr:hover .request-thumbnail {
        transform: scale(1.05);
    }

    .service-name {
        font-weight: 500;
        color: #2d3748;
    }

    .time-badge {
        background-color: rgba(78, 110, 77, 0.1);
        color: #4e6e4d;
        padding: 0.3rem 0.6rem;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    /* Status Badges */
    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        padding: 0.3rem 0.7rem;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 500;
    }

        .status-badge.pending {
            background-color: rgba(246, 173, 85, 0.15);
            color: #ed8936;
        }

        .status-badge.approved {
            background-color: rgba(72, 187, 120, 0.15);
            color: #48bb78;
        }

        .status-badge.completed {
            background-color: rgba(56, 161, 219, 0.15);
            color: #38a1db;
        }

        .status-badge.rejected {
            background-color: rgba(229, 62, 62, 0.15);
            color: #e53e3e;
        }

    /* Empty State */
    .empty-state {
        padding: 3rem 2rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

        .empty-state i {
            color: #cbd5e0;
            margin-bottom: 1rem;
        }

        .empty-state h5 {
            color: #4a5568;
            font-weight: 600;
        }

        .empty-state p {
            max-width: 300px;
        }

    /* Button Styling */
    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(78, 110, 77, 0.3);
        }

    .btn-outline-secondary {
        color: var(--text-muted);
        border-color: #dee2e6;
        transition: all 0.3s ease;
    }

        .btn-outline-secondary:hover {
            background-color: #f8f9fa;
            color: var(--primary-color);
            border-color: var(--primary-color);
        }

    .btn-outline-success {
        transition: all 0.3s ease;
    }

        .btn-outline-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);
        }

    .btn-outline-danger {
        transition: all 0.3s ease;
    }

        .btn-outline-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(220, 53, 69, 0.2);
        }

    .navbar {
        background-color: rgba(78, 110, 77, 0.95) !important;
        backdrop-filter: blur(10px);
        padding: 0.75rem 0;
        transition: all 0.3s ease;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    }

    .navbar-brand {
        font-weight: 700;
        color: white !important;
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    .brand-text {
        background: linear-gradient(45deg, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .navbar-nav {
        gap: 0.5rem;
    }

        .navbar-nav .nav-link {
            color: white !important;
            font-weight: 500;
            font-size: 0.95rem;
            padding: 0.6rem 1rem !important;
            border-radius: 4px;
            transition: all 0.3s ease;
            position: relative;
        }

            .navbar-nav .nav-link:hover,
            .navbar-nav .nav-link.active {
                background-color: rgba(255, 255, 255, 0.15);
                transform: translateY(-1px);
            }

        .navbar-nav .dropdown-menu {
            background-color: white;
            border: none;
            border-radius: 8px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            padding: 0.5rem;
            margin-top: 0.5rem;
            border-top: 3px solid #4e6e4d;
        }

        .navbar-nav .dropdown-item {
            padding: 0.6rem 1rem;
            color: #555;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

            .navbar-nav .dropdown-item:hover {
                background-color: rgba(78, 110, 77, 0.1);
                color: #4e6e4d;
                transform: translateX(3px);
            }

    .dropdown-divider {
        margin: 0.5rem 0;
        border-top: 1px solid rgba(0, 0, 0, 0.05);
    }

    .nav-items-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    .profile-menu .profile-link {
        padding: 0 !important;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
    }

    .bi-person-fill {
        font-size: 1.2rem;
        color: white;
    }


    .profile-avatar {
        width: 35px;
        height: 35px;
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.3rem;
        transition: all 0.3s ease;
        border: 2px solid rgba(255, 255, 255, 0.2);
    }

    .profile-link:hover .profile-avatar {
        transform: translateY(-2px);
        background-color: rgba(255, 255, 255, 0.25);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .profile-dropdown {
        min-width: 250px;
        padding: 0.75rem 0.5rem;
    }

        .profile-dropdown .dropdown-header {
            padding: 0.5rem 1rem;
            border-bottom: none;
        }

    .user-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .user-name {
        font-weight: 600;
        color: #333;
        font-size: 1rem;
    }

    .user-role {
        color: #777;
        font-size: 0.8rem;
    }

    .profile-dropdown .dropdown-item {
        padding: 0.7rem 1rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #555;
        transition: all 0.2s ease;
        border-radius: 6px;
        margin: 0.2rem 0.5rem;
    }

        .profile-dropdown .dropdown-item i {
            font-size: 1.1rem;
            color: #4e6e4d;
            width: 20px;
            text-align: center;
        }

        .profile-dropdown .dropdown-item:hover {
            background-color: rgba(78, 110, 77, 0.1);
            color: #4e6e4d;
            transform: translateX(3px);
        }

    .logout-item {
        color: #dc3545 !important;
    }

        .logout-item i {
            color: #dc3545 !important;
        }

    /* Rating Stars */
    .rating-stars {
        font-size: 2rem;
        color: #cbd5e0;
        cursor: pointer;
    }

        .rating-stars .bi-star-fill {
            margin: 0 0.15rem;
            transition: all 0.2s ease;
        }

            .rating-stars .bi-star-fill:hover,
            .rating-stars .bi-star-fill.selected {
                color: #ffc107;
                transform: scale(1.1);
            }

                .rating-stars .bi-star-fill.selected ~ .bi-star-fill.selected {
                    color: #ffc107;
                }

    /* Enhanced Rating Stars */
    .service-rating-label {
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
        color: var(--text-dark);
    }

    .rating-stars-container {
        position: relative;
        padding: 0.5rem 0;
    }

    .rating-stars {
        font-size: 2.5rem;
        color: #cbd5e0;
        display: flex;
        justify-content: center;
        gap: 0.5rem;
    }

        .rating-stars .rating-star {
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

            .rating-stars .rating-star:hover,
            .rating-stars .rating-star.selected {
                color: #ffc107;
                transform: scale(1.2);
            }

                .rating-stars .rating-star.selected ~ .rating-star {
                    color: #cbd5e0;
                }

                /* Apply star coloring in reverse order */
                .rating-stars .rating-star:hover ~ .rating-star {
                    color: #cbd5e0;
                }

    .rating-text {
        font-size: 1.1rem;
        font-weight: 500;
        color: var(--primary-color);
        margin-top: 1rem;
        min-height: 1.5rem;
        transition: all 0.3s ease;
    }

    .rating-level-indicators {
        display: flex;
        justify-content: space-between;
        padding: 0 0.5rem;
        margin-top: 0.5rem;
        color: var(--text-muted);
        font-size: 0.8rem;
    }

    .feedback-textarea {
        border-color: rgba(0,0,0,0.1);
        transition: all 0.2s ease;
        font-size: 0.95rem;
    }

        .feedback-textarea:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(78, 110, 77, 0.25);
        }

    .feedback-helper {
        font-size: 0.85rem;
    }

    /* Rating modal styling */
    #ratingModal .modal-content {
        border-radius: 15px;
        border: none;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    #ratingModal .modal-header {
        border-bottom: 1px solid rgba(0,0,0,0.05);
        background-color: var(--primary-lighter);
    }

    #ratingModal .modal-title {
        color: var(--primary-color);
        font-weight: 600;
    }

    #ratingModal .modal-footer {
        border-top: 1px solid rgba(0,0,0,0.05);
    }

    .status-badge.feedback-submitted {
        background-color: rgba(144, 104, 190, 0.15);
        color: #8a5eba;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize the tabs
        const triggerTabList = [].slice.call(document.querySelectorAll('#requestTabs a'));
        triggerTabList.forEach(function(triggerEl) {
            const tabTrigger = new bootstrap.Tab(triggerEl);
            triggerEl.addEventListener('click', function(event) {
                event.preventDefault();
                tabTrigger.show();
            });
        });
    });

        // Add to the existing script section at the bottom of MyServiceRequests.cshtml
    document.addEventListener('DOMContentLoaded', function() {
        // Rating modal functionality
        const ratingModal = document.getElementById('ratingModal');
        if (ratingModal) {
            ratingModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const serviceRequestId = button.getAttribute('data-service-request-id');
                const serviceName = button.getAttribute('data-service-name');

                document.getElementById('serviceRequestId').value = serviceRequestId;
                document.getElementById('serviceName').textContent = serviceName;

                // Reset rating
                document.getElementById('rating').value = 0;
                document.getElementById('ratingText').textContent = 'Click a star to rate';
                document.querySelectorAll('.rating-star').forEach(star => {
                    star.classList.remove('selected');
                });
                document.getElementById('submitRating').disabled = true;
            });
        }

        // Star rating functionality with improved UX
        const ratingStars = document.querySelectorAll('.rating-star');

        // Helper function to update stars based on value
        function updateStars(value) {
            ratingStars.forEach(s => {
                const starValue = parseInt(s.getAttribute('data-value'));
                if (starValue <= value) {
                    s.classList.add('selected');
                } else {
                    s.classList.remove('selected');
                }
            });
        }

        // Handle hovering over stars
        ratingStars.forEach(star => {
            star.addEventListener('mouseover', function() {
                const value = parseInt(this.getAttribute('data-value'));
                updateStars(value);

                // Update rating text on hover
                const ratingTexts = [
                    'Click a star to rate',
                    'Poor',
                    'Fair',
                    'Good',
                    'Very Good',
                    'Excellent'
                ];
                document.getElementById('ratingText').textContent = ratingTexts[value];
            });
        });

        // Handle mouse leaving the rating area
        const ratingContainer = document.querySelector('.rating-stars');
        if (ratingContainer) {
            ratingContainer.addEventListener('mouseleave', function() {
                const currentRating = parseInt(document.getElementById('rating').value);
                updateStars(currentRating);

                // Reset text if no rating selected, otherwise keep selected rating text
                if (currentRating === 0) {
                    document.getElementById('ratingText').textContent = 'Click a star to rate';
                } else {
                    const ratingTexts = [
                        'Click a star to rate',
                        'Poor',
                        'Fair',
                        'Good',
                        'Very Good',
                        'Excellent'
                    ];
                    document.getElementById('ratingText').textContent = ratingTexts[currentRating];
                }
            });
        }

        // Handle clicking on stars
        ratingStars.forEach(star => {
            star.addEventListener('click', function() {
                const value = parseInt(this.getAttribute('data-value'));
                document.getElementById('rating').value = value;
                updateStars(value);

                // Update rating text
                const ratingTexts = [
                    'Click a star to rate',
                    'Poor',
                    'Fair',
                    'Good',
                    'Very Good',
                    'Excellent'
                ];
                document.getElementById('ratingText').textContent = ratingTexts[value];

                // Enable submit button
                document.getElementById('submitRating').disabled = false;
            });
        });
    });
</script>